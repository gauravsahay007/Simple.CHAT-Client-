[{"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js":"1","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js":"3","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js":"4","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js":"5","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js":"6","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js":"7","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js":"8","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js":"9","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js":"10","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js":"11","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js":"12","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js":"13","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js":"14","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js":"15","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js":"16","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\profile.js":"17","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\CreateGroupChat.js":"18","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\UpdateGroupChat.js":"19","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\SideBar.js":"20","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\chatloading.js":"21"},{"size":535,"mtime":1685956485937,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1685956486302,"results":"24","hashOfConfig":"23"},{"size":299,"mtime":1686115239203,"results":"25","hashOfConfig":"23"},{"size":829,"mtime":1686217428265,"results":"26","hashOfConfig":"23"},{"size":1294,"mtime":1686113568497,"results":"27","hashOfConfig":"23"},{"size":95,"mtime":1685995161032,"results":"28","hashOfConfig":"23"},{"size":5241,"mtime":1686022377277,"results":"29","hashOfConfig":"23"},{"size":4470,"mtime":1685998422633,"results":"30","hashOfConfig":"23"},{"size":4713,"mtime":1686217730615,"results":"31","hashOfConfig":"23"},{"size":283,"mtime":1686167281108,"results":"32","hashOfConfig":"23"},{"size":3385,"mtime":1686218063287,"results":"33","hashOfConfig":"23"},{"size":195,"mtime":1685988125170,"results":"34","hashOfConfig":"23"},{"size":2380,"mtime":1686216288298,"results":"35","hashOfConfig":"23"},{"size":702,"mtime":1686133924883,"results":"36","hashOfConfig":"23"},{"size":511,"mtime":1686203743300,"results":"37","hashOfConfig":"23"},{"size":300,"mtime":1686218125546,"results":"38","hashOfConfig":"23"},{"size":1755,"mtime":1686127630324,"results":"39","hashOfConfig":"23"},{"size":5973,"mtime":1686217502054,"results":"40","hashOfConfig":"23"},{"size":8107,"mtime":1686216998690,"results":"41","hashOfConfig":"23"},{"size":3964,"mtime":1686226912558,"results":"42","hashOfConfig":"23"},{"size":543,"mtime":1686217428264,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1a61mm9",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js",[],[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js",["119","120"],[],"import React from 'react'\nimport { Alert } from '@mui/material'\nimport Routers from \"./Router\"\nimport ChatProvider from './main/chatProvider'\nexport default function App() {\n  return (\n    <React.StrictMode>\n       \n        <Routers/> \n      \n     \n     \n      \n      </React.StrictMode>\n    \n  )\n}\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js",["121"],[],"import {API} from \"../../../backend\"\r\n\r\n\r\nexport const login = (user) => {\r\n    \r\n    return fetch(`${API}/login`,{\r\n        method:\"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(resp => {\r\n        return resp.json();\r\n    })\r\n    .catch(err => {return err })\r\n}\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n\r\n    }).then((resp,err)=>{\r\n        if(err){\r\n            return ;\r\n        }\r\n        else return resp.json();\r\n    }).\r\n    catch(err=>{\r\n        console.log(err);\r\n        return\r\n    })\r\n}\r\n\r\nexport const authenticate = (data, next) =>{\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.setItem(\"jwt\",JSON.stringify(data))\r\n\r\n        next();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if(typeof window == \"undefined\"){\r\n        return false\r\n    }\r\n    if(localStorage.getItem(\"jwt\")){\r\n        \r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n        \r\n    }\r\n    else{\r\n        return false    }\r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js",["122","123","124","125","126","127"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {signup} from \"./Helper/APIcalls\"\r\n\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\n\r\n// --------------------------------------------------------\r\nexport default function Signup() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [name , setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        if(name===\"name\"){\r\n            setName(event.target.value);\r\n        }\r\n        else if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!name || !email || !password){\r\n          setShow(true);\r\n        }\r\n        else{\r\n          signup({name,email,password}).then(data => {\r\n            setSuccess(true);\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            console.log(data);\r\n        }\r\n        )\r\n        }\r\n      \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Signed Up Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={name}\r\n                  name=\"Name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"Name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                  onChange={handleChange(\"name\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n             \r\n              sx={[{ mt: 3, mb: 2, bgcolor:\"blue\" },{\r\n                '&:hover':{\r\n                    bgcolor: \"#2827CC\"\r\n                }\r\n              }]}\r\n            onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"http://localhost:3000/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js",["128","129","130","131","132","133","134","135","136","137","138","139","140"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js",["141","142","143","144","145","146","147","148"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {login} from \"./Helper/APIcalls\"\r\nimport { authenticate } from './Helper/APIcalls';\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport { ChatState } from '../../main/chatProvider';\r\n// --------------------------------------------------------\r\nexport default function Login() {\r\n    const [show, setShow] = useState(false);\r\n    const { setUser } = ChatState();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        \r\n        if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!email || !password){\r\n          setShow(true);\r\n          \r\n        }\r\n        else{  \r\n            login({email,password}).then(data => {\r\n              setSuccess(true);\r\n              localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n              \r\n              setUser(data);\r\n              console.log(data);\r\n                \r\n              console.log(data.user);  \r\n            }\r\n            )\r\n        }\r\n       \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Logined Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           Sign In\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={[{ mt: 3, mb: 2, bgcolor:\"blue\" },{\r\n                '&:hover':{\r\n                    bgcolor: \"#2827CC\"\r\n                }\r\n              }]\r\n            }\r\n            onClick={handleSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js",["149","150","151"],[],"import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { API } from \"../backend\";\r\nimport { getOtherUsers } from '../configuration/logic';\r\n\r\nconst ChatContext=createContext(\"\");\r\n\r\nconst ChatProvider=({children})=>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [chat,setChat]=useState();\r\n    const [error,setError]=useState();\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    const [selectedChat,setSelectedChat]=useState();\r\n    const [notification,setNotification]=useState();\r\n\r\n\r\n    const getNotification=(userId)=>{\r\n        \r\n        var array=[];\r\n        \r\n        const {data}=fetch(`${API}/getnotification/${userId}`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                Authorization: `Bearer ${user.token}` \r\n            },\r\n            body:{\r\n               array \r\n            }\r\n        });\r\n        data.notification.forEach((ele)=>{\r\n            array.push(ele.message);\r\n        });\r\n        setNotification(array);\r\n        if(!user){\r\n    return;\r\n        }return {data}\r\n        .then(res=>{\r\n            return res.json()\r\n        })\r\n        .catch(err=>console.log({\r\n            title: \"Error fetching the Notifications\",\r\n            description: error.message,\r\n            status: \"error\",\r\n            isClosable: true,\r\n            position: \"top\",\r\n        }))\r\n       };\r\n   const removeNotification=(chatId)=>{\r\n    //need to change from backend\r\n   \r\n    //improve backend route in user router\r\n    const {data}=fetch(`${API}/deletenotification/`,\r\n\r\n      {\r\n        method:\"PUT\",\r\n        headers:{\r\n            Authorization: `Bearer ${user.token}` \r\n        },\r\n        body:{\r\n            userId: user._id,\r\n            chatId: chatId,\r\n            \r\n          },\r\n    });\r\n    var array=[];\r\n    data.notification.forEach((ele)=>{\r\n        array.push(ele.message);\r\n    });\r\n    setNotification(array);\r\n    if(!user){\r\nreturn;\r\n    }return {data}\r\n    .then(res=>{\r\n        return res.json()\r\n    })\r\n    .catch(err=>console.log({\r\n        title: \"Error deleting the Notifications\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n    }))\r\n   };\r\n   \r\n   const sendNotification=(data,userId)=>{\r\n    const recievers=getOtherUsers(user,selectedChat.users);\r\n    \r\n    for(const receiver of recievers){\r\n        //fetching api of send message\r\n        fetch(`${API}/message/send/${userId}`,\r\n        {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${user.token}`,\r\n            },\r\n            body:{\r\n                userId: receiver._id,\r\n                messageId: data._id,\r\n                chatId: data.chat._id,\r\n              },\r\n        })\r\n    }\r\n   }\r\n\r\n   \r\n   \r\n   return (\r\n    <ChatContext.Provider\r\n    value={{\r\n        user,setUser,\r\n        selectedChat,setSelectedChat,\r\n        chat,setChat,\r\n        error,setError,\r\n       \r\n        notification,setNotification,\r\n        removeNotification,\r\n        sendNotification,\r\n    }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n   );\r\n};\r\nexport const ChatState=()=>{\r\n    return useContext(ChatContext);\r\n}\r\nexport default ChatProvider","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js",[],[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js",["152"],[],"import React from 'react'\r\nimport { Box, Avatar, Stack, Typography } from '@mui/material'\r\nexport default function UserListItem({user, handleFunction}) {\r\n\r\n  return (\r\n    <Box onClick={handleFunction} sx={[{bgcolor:\"#E8E8E8\",mt:\"5px\",mb:\"5px\",borderRadius:1 , p:\"5px\", display:\"flex\" , gap:\"20px\",cursor:\"pointer\"},{\r\n        '&:hover':{\r\n            bgcolor:\"#2827CC\",\r\n            color:\"white\"\r\n        }\r\n    }]}>\r\n        <Avatar sx={{  width: 38, height: 38, border:\"1px solid black\" }} src={user.pic}/>\r\n    <Box sx={{display:\"flex\", flexDirection:\"column\"}}>\r\n        <Typography>{user.name}</Typography>\r\n        <Typography  >{user.email}</Typography>\r\n    </Box>\r\n   \r\n    </Box>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js",["153"],[],"import React from \"react\";\r\nimport ProfileModal from \"./Components/Modals/profile\";\r\nimport SideBar from \"./Components/Modals/SideBar\";\r\nexport default function Test(){\r\n    \r\n\r\n        return (\r\n            <div> \r\n                <SideBar/>\r\n                \r\n            </div>\r\n          )\r\n  \r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\profile.js",["154"],[],"import React from \"react\";\r\n\r\n\r\n\r\n\r\nimport {IconButton ,Avatar,Button,Typography ,Box,Dialog,DialogContent,DialogTitle } from \"@mui/material\";\r\nimport { ChatState } from \"../../main/chatProvider\";\r\n\r\n\r\nconst ProfileModal = ({ children, size }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    // console.log(ChatState());\r\n    const user =  JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n\r\n  \r\n\r\n  \r\n    return(\r\n        <>\r\n        {children ? (\r\n            <span onClick={handleClickOpen}>{children}</span>\r\n        ):(\r\n            <IconButton \r\n            sx={{display:{base:'flex'},\r\n                background:'inherit',\r\n                borderRadius:'90%'}}\r\n                onClick={handleClickOpen}\r\n            >\r\n            <Avatar\r\n            size={size} cursor='pointer' alt={user.name} src={user.user.pic}\r\n            />\r\n            </IconButton>\r\n        )}\r\n        {\r\n\r\n         <Dialog open={open}  maxWidth=\"lg\">\r\n            <DialogTitle sx={{fontSize: 40, fontFamily: 'QuickSand', textAlign: 'center'}}>Welcome {user.user.name}</DialogTitle>\r\n            <DialogContent>\r\n                <Box textAlign=\"center\">\r\n\r\n                <Avatar  sx={{  width: 90, height: 90, m:\"auto\", mb:\"20px\" }} src={user.user.pic}/>\r\n\r\n                </Box>\r\n                <Typography align=\"center\">\r\n                    Email: {user.user.email}\r\n                </Typography>\r\n            </DialogContent>\r\n            <Button color=\"primary\" onClick={handleClose} >Close</Button>\r\n         </Dialog>\r\n        }\r\n\r\n\r\n      </>\r\n    )\r\n  \r\n    \r\n  };\r\n\r\n  \r\n  export default ProfileModal;","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\CreateGroupChat.js",["155","156","157","158","159"],[],"import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { ChatState } from '../../main/chatProvider';\r\nimport { CreateGroup, SearchUsers } from '../Helper';\r\nimport { isAuthenticated } from '../Auth/Helper/APIcalls';\r\nimport UserListItem from '../Avatar/UserListItem';\r\n// ----------------------------------------------\r\n// Material UI\r\nimport { Typography, Grid, Snackbar, CircularProgress, Stack, Alert, Box} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { blue } from '@mui/material/colors';\r\nimport UserBadgeItem from '../Avatar/UserBadgeItem';\r\n// ------------------------------------------------\r\n\r\n\r\n\r\nexport default function CreateGroupChat() {\r\n// ----------------------------------------------\r\n// dialog box\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   -----------------------------------------------------\r\n\r\n\r\n\r\n// -------------------------------------------------------\r\n// states\r\n   const [groupChatName, setGroupChatName] = useState();\r\n   const [selectedUsers, setSelectedUsers] = useState([]);\r\n   const [search, setSearch] = useState();\r\n   const [searchResults, setSearchResults] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  const {user} = ChatState();\r\n \r\n   \r\n//   console.log(user);\r\n  \r\n   \r\n   \r\n   \r\n\r\n// -------------------------------------------------------\r\n\r\n\r\n// -------------------------------------------------------\r\n// handle functions\r\n\r\nconst handleSearch = (query) => {\r\n    setSearch(query); \r\n    if(!query){\r\n        return;\r\n    } \r\n\r\n    try{\r\n        setLoading(true);\r\n        SearchUsers(user,query).then((response,err)=>{\r\n            setSearchResults(response)\r\n           \r\n           setFetch(!fetch);\r\n    \r\n        })\r\n    }catch(err){\r\n        \r\n        console.log(err);\r\n        return;\r\n    }\r\n} \r\nuseEffect(()=>{\r\n  setTimeout(()=>{\r\n    setLoading(false);\r\n  },1000)\r\n},[fetch])\r\nconst handleSubmit = () =>{\r\n    if(!groupChatName || !selectedUsers){\r\n        return;\r\n    }\r\n    try{\r\n        CreateGroup(user,selectedUsers,groupChatName).then((response,err)=>{\r\n            console.log(response);\r\n        })\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n        return ;\r\n    }\r\n}\r\n\r\nconst handleGroup = (userToAdd) => {\r\n    if(selectedUsers.includes(userToAdd)){\r\n        <Snackbar open={open} onClose={handleClose} autoHideDuration={4000}>\r\n        <Alert  severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          User Already Added!!\r\n        </Alert>\r\n      </Snackbar>\r\n      return ;\r\n      \r\n\r\n    }\r\n    else  setSelectedUsers([...selectedUsers, userToAdd]);\r\n    \r\n}\r\n\r\nconst handleDelete=(userToDelete)=>{\r\n    setSelectedUsers(\r\n        selectedUsers.filter((sel) => sel._id !== userToDelete._id)\r\n      );\r\n}\r\n// -------------------------------------------------------\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" sx={{color:\"blue\"}} onClick={handleClickOpen}>\r\n        Create Group <AddIcon sx={{ fontSize: 22, mb : \"3px\", ml : \"5px\", color:\"blue\" }}/>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\" >\r\n        <DialogTitle  sx={{fontSize: \"30px\" }}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n    Create Group Chat\r\n</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n         \r\n        <Grid item xs={12} sx={{mb:\"10px\" , mt: \"10px\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  id=\"group name\"\r\n                  label=\"Group Name\"\r\n                  value={groupChatName}\r\n                  onChange={(event)=>{ setGroupChatName(event.target.value)}}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sx={{mb:\"10px\" , mt: \"10px\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  id=\"add users\"\r\n                  label=\"Add Users\"\r\n                  onChange={(e)=>handleSearch(e.target.value) }\r\n                />\r\n\r\n                <Box sx={{display:\"flex\", fontSize:\"10px\", gap:\"5px\"}}>\r\n                    {selectedUsers.map((u)=>(\r\n                        <UserBadgeItem key={u._id} user={u} handlerfunction={()=>{handleDelete(u)}}/>\r\n                    ))}\r\n                </Box>\r\n\r\n            <Stack direction=\"row\" spacing={10}>  \r\n                <Button variant='filled'  sx={[{bgcolor:\"blue\", color:\"white\", mt:\"5px\"},{\r\n                                '&:hover':{\r\n                                    bgcolor: \"#2827CC\"\r\n                                }\r\n                            }]\r\n                        } onClick={handleSubmit}>Create Chat</Button>\r\n    {loading? (\r\n        <div> <CircularProgress size=\"25px\" sx={{mt:\"12px\"}}/></div>\r\n                   \r\n                  ):( <div></div> )} \r\n                    \r\n            </Stack> \r\n\r\n            {loading? (\r\n        <div> </div> \r\n                  ):(\r\n                    searchResults\r\n                    ?.slice(0, 4)\r\n                    .map((user) => (\r\n                      <UserListItem key={user._id} user={user} handleFunction={()=>handleGroup(user)}/>\r\n                     \r\n                    )))}\r\n           \r\n              </Grid>\r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n\r\n          \r\n\r\n    </div>\r\n  );\r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\UpdateGroupChat.js",["160","161","162","163","164","165","166","167"],[],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { ChatState } from '../../main/chatProvider';\r\nimport UserListItem from '../Avatar/UserListItem';\r\n// ------------------------------------\r\n// MUI\r\nimport { Typography, Grid, Snackbar, CircularProgress, Stack, Alert, Box, IconButton} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { blue } from '@mui/material/colors';\r\nimport UserBadgeItem from '../Avatar/UserBadgeItem';\r\nimport RemoveRedEyeRoundedIcon from '@mui/icons-material/RemoveRedEyeRounded';\r\nimport { AddToGroup, FetchChats, Kickout, RenameGroup, SearchUsers } from '../Helper';\r\n// ------------------------------------\r\n\r\n\r\nexport default function UpdateGroupChat({fetchAgain, setFetchAgain, fetchMessages}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedChat, setSelectedChat] = useState();\r\n   const [fetch, setFetch] = useState(false);\r\n   const [members, setMembers] = useState([]);\r\n   const {user} =    ChatState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [successDel, setSuccessDel] = useState(false);\r\n  const [chatName , setChatName ] = useState(\"\");\r\n//  console.log(user);\r\n  const handleClickOpen = () => {\r\n    if(user)  FetchChats(user).then(response=>{\r\n        setSelectedChat(response[0]);\r\n        if(!selectedChat) setOpen(false);\r\n        \r\n        else{\r\n          setTimeout(()=>{\r\n            setMembers(selectedChat.users)\r\n            setChatName(selectedChat.chatName)\r\n            setOpen(true);\r\n          },300)\r\n        }\r\n       \r\n       \r\n      })\r\n\r\n  };\r\n\r\n  \r\n\r\n  \r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n \r\n\r\n  \r\n// ---------------------------------------------\r\n// STATES\r\n  const [loading, setLoading] = useState(false);\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [renameLoading, setRenameLoading] = useState(false);\r\n \r\n\r\n//----------------------------------------------- \r\n  \r\n\r\n// ----------------------------------------------\r\n// Handle functions\r\n  const handleRemove = (userToRemove) =>{\r\n        try{\r\n          setLoading(true);\r\n          Kickout(user,selectedChat._id,userToRemove._id).then(response=>{\r\n           setLoading(false);\r\n           setSuccessDel(true);\r\n           setMembers(members.filter(u=>u._id!=userToRemove._id));\r\n          })\r\n         }\r\n        \r\n        catch{\r\n          setLoading(false);\r\n        }\r\n  }\r\n\r\n  \r\n\r\n  const handleRename = () =>{\r\n    if(!groupChatName) return ;\r\n    try{\r\n      setRenameLoading(true);\r\n      RenameGroup(user, groupChatName , selectedChat._id).then(response=>{\r\n        setRenameLoading(false);\r\n        setSelectedChat(response);\r\n        setChatName(groupChatName);\r\n        // setFetchAgain(!fetchAgain);\r\n      })\r\n    }\r\n    catch(err){\r\n      setRenameLoading(false);\r\n      <Snackbar open={true} autoHideDuration={4000}>\r\n      <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n       Error Occured!\r\n      </Alert>\r\n    </Snackbar>\r\n    }\r\n\r\n    setGroupChatName(\"\");\r\n  }\r\n\r\n  const handleSearch = (query) => {\r\n    setSearch(query); \r\n    if(!query){\r\n        return;\r\n    } \r\n\r\n    try{\r\n        setLoading(true)\r\n        SearchUsers(user,query).then((response,err)=>{\r\n          setSearchResults(response)\r\n           setFetch(!fetch);\r\n    \r\n        })\r\n    }catch(err){\r\n        \r\n        console.log(err);\r\n        return;\r\n    }\r\n} \r\n\r\nuseEffect(()=>{\r\n  setTimeout(()=>{\r\n    setLoading(false);\r\n  },1000)\r\n},[fetch])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst handleAddUser = (userToAdd) => {\r\n  if(selectedChat.users.find((u)=>u._id === userToAdd._id)){\r\n    <Snackbar open={true} autoHideDuration={4000}>\r\n    <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n     User Already in group!!\r\n    </Alert>\r\n  </Snackbar>\r\n  return ;\r\n  }\r\n\r\n  try{\r\n    setLoading(true);\r\n   \r\nAddToGroup(user,selectedChat._id,userToAdd._id).then(response=>{\r\n setFetch(!fetch)\r\n setSuccess(true);\r\n  setMembers([...members,response]);\r\nconsole.log(members);\r\n// setSelectedChat(response);\r\n// setFetchAgain(!fetchAgain);\r\n})\r\n  }\r\n  catch(err){\r\n    setFetch(false);\r\n      <Snackbar open={true} autoHideDuration={4000}>\r\n      <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n       Error Occured!\r\n      </Alert>\r\n    </Snackbar>\r\n  }\r\n\r\n}\r\n\r\nconst Array = () =>{\r\n  return (members.map((u)=>(\r\n    <>\r\n    <Snackbar open={success} autoHideDuration={2000}onClose={()=>{\r\n      setSuccess(false);\r\n    }} >\r\n      <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n       User Added!!\r\n      </Alert>\r\n    </Snackbar>\r\n    <UserBadgeItem key={u._id} user={u} handlerfunction={()=>{handleRemove(u)}}/>\r\n    </>\r\n   \r\n)))\r\n}\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------\r\n  \r\n\r\n\r\n  \r\n\r\nreturn (\r\n  <>\r\n    <Snackbar open={successDel} autoHideDuration={2000}onClose={()=>{\r\n      setSuccessDel(false);\r\n    }} >\r\n      <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n       User Deleted Successfully!!\r\n      </Alert>\r\n    </Snackbar>\r\n\r\n  <IconButton onClick={handleClickOpen} sx={{borderRadius:\"4px\",m:\"4px\"}}>\r\n  <RemoveRedEyeRoundedIcon sx={{color:\"blue\",m:\"5px\"}}   />\r\n  </IconButton>\r\n\r\n  {open? (\r\n       <Dialog open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\" >\r\n       <DialogTitle sx={{fontSize: \"30px\"}}>\r\n       <Typography variant=\"h5\" align=\"center\">\r\n   {chatName}\r\n </Typography>\r\n       </DialogTitle>\r\n       <DialogContent>\r\n \r\n       <Box sx={{display:\"flex\", fontSize:\"10px\", gap:\"5px\"}}>\r\n                   {Array()}\r\n               </Box>\r\n        \r\n       <Grid item xs={12} sx={{mb:\"10px\" , mt: \"10px\"}}>\r\n               <TextField  \r\n                 size='small'\r\n                 id=\"group name\"\r\n                 label=\"Chat Name\"\r\n                 value={groupChatName}\r\n                 onChange={(event)=>{ setGroupChatName(event.target.value) \r\n               } }\r\n               \r\n               />\r\n               <Button variant='contained' sx={{ml:\"4px\",mt:\"2px\", bgcolor:\"blue\"}} onClick={handleRename} >Update</Button>\r\n             </Grid>\r\n             <Grid item xs={12} sx={{mb:\"10px\" , mt: \"10px\"}}>\r\n               <TextField\r\n                size='small'\r\n                 fullWidth\r\n                 id=\"add users\"\r\n                 label=\"Add User to group\"\r\n                 onChange={(e)=>(handleSearch(e.target.value)) }\r\n               />\r\n          \r\n             </Grid>\r\n             \r\n           \r\n              \r\n               <Stack direction=\"row\" spacing={15}>\r\n               <Button variant='contained' onClick={handleRemove(user)} sx={[{ml:\"4px\",mt:\"2px\", bgcolor:\"red\"},{\r\n               '&:hover':{\r\n                 bgcolor:\"#C53030\"\r\n               }\r\n             }]} >Leave Group</Button>\r\n               {loading? (\r\n        <div> <CircularProgress size=\"23px\" sx={{mt:\"12px\",color:\"blue\"}}/></div>\r\n                   \r\n                  ):( <div></div> )} \r\n               </Stack>\r\n\r\n               {loading? (\r\n        <div> </div> \r\n                  ):(\r\n                    searchResults\r\n                    ?.slice(0, 4)\r\n                    .map((user) => (\r\n                      <UserListItem key={user._id} user={user} handleFunction={()=>handleAddUser(user)}/>\r\n                     \r\n                    )))}\r\n           \r\n       </DialogContent>\r\n       \r\n     </Dialog>\r\n                   \r\n                  ):(<></> )} \r\n  \r\n  \r\n  </>\r\n)\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\SideBar.js",["168","169","170","171","172","173","174","175","176","177"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\chatloading.js",[],[],{"ruleId":"178","severity":1,"message":"179","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":15},{"ruleId":"178","severity":1,"message":"182","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":20},{"ruleId":"183","severity":1,"message":"184","line":34,"column":7,"nodeType":"185","messageId":"186","endLine":34,"endColumn":8,"fix":"187"},{"ruleId":"178","severity":1,"message":"188","line":3,"column":23,"nodeType":"180","messageId":"181","endLine":3,"endColumn":31},{"ruleId":"178","severity":1,"message":"189","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":24},{"ruleId":"178","severity":1,"message":"190","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":16},{"ruleId":"178","severity":1,"message":"191","line":20,"column":23,"nodeType":"180","messageId":"181","endLine":20,"endColumn":36},{"ruleId":"178","severity":1,"message":"192","line":31,"column":11,"nodeType":"180","messageId":"181","endLine":31,"endColumn":19},{"ruleId":"178","severity":1,"message":"193","line":33,"column":11,"nodeType":"180","messageId":"181","endLine":33,"endColumn":23},{"ruleId":"178","severity":1,"message":"188","line":3,"column":23,"nodeType":"180","messageId":"181","endLine":3,"endColumn":31},{"ruleId":"178","severity":1,"message":"189","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":24},{"ruleId":"178","severity":1,"message":"190","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":16},{"ruleId":"178","severity":1,"message":"191","line":20,"column":23,"nodeType":"180","messageId":"181","endLine":20,"endColumn":36},{"ruleId":"178","severity":1,"message":"194","line":26,"column":12,"nodeType":"180","messageId":"181","endLine":26,"endColumn":16},{"ruleId":"178","severity":1,"message":"195","line":26,"column":18,"nodeType":"180","messageId":"181","endLine":26,"endColumn":25},{"ruleId":"178","severity":1,"message":"196","line":30,"column":12,"nodeType":"180","messageId":"181","endLine":30,"endColumn":19},{"ruleId":"178","severity":1,"message":"197","line":30,"column":21,"nodeType":"180","messageId":"181","endLine":30,"endColumn":31},{"ruleId":"178","severity":1,"message":"192","line":31,"column":11,"nodeType":"180","messageId":"181","endLine":31,"endColumn":19},{"ruleId":"178","severity":1,"message":"193","line":33,"column":11,"nodeType":"180","messageId":"181","endLine":33,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":35,"column":16,"nodeType":"200","messageId":"201","endLine":35,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":38,"column":21,"nodeType":"200","messageId":"201","endLine":38,"endColumn":23},{"ruleId":"178","severity":1,"message":"202","line":59,"column":14,"nodeType":"180","messageId":"181","endLine":59,"endColumn":23},{"ruleId":"178","severity":1,"message":"188","line":3,"column":23,"nodeType":"180","messageId":"181","endLine":3,"endColumn":31},{"ruleId":"178","severity":1,"message":"203","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":22},{"ruleId":"178","severity":1,"message":"189","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":24},{"ruleId":"178","severity":1,"message":"190","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":16},{"ruleId":"178","severity":1,"message":"204","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":12},{"ruleId":"178","severity":1,"message":"191","line":20,"column":23,"nodeType":"180","messageId":"181","endLine":20,"endColumn":36},{"ruleId":"178","severity":1,"message":"192","line":30,"column":11,"nodeType":"180","messageId":"181","endLine":30,"endColumn":19},{"ruleId":"178","severity":1,"message":"193","line":32,"column":11,"nodeType":"180","messageId":"181","endLine":32,"endColumn":23},{"ruleId":"178","severity":1,"message":"205","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":19},{"ruleId":"178","severity":1,"message":"192","line":11,"column":11,"nodeType":"180","messageId":"181","endLine":11,"endColumn":19},{"ruleId":"178","severity":1,"message":"206","line":20,"column":11,"nodeType":"180","messageId":"181","endLine":20,"endColumn":26},{"ruleId":"178","severity":1,"message":"207","line":2,"column":23,"nodeType":"180","messageId":"181","endLine":2,"endColumn":28},{"ruleId":"178","severity":1,"message":"208","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":20},{"ruleId":"178","severity":1,"message":"209","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":19},{"ruleId":"178","severity":1,"message":"210","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":25},{"ruleId":"178","severity":1,"message":"211","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":21},{"ruleId":"178","severity":1,"message":"212","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":25},{"ruleId":"178","severity":1,"message":"213","line":18,"column":10,"nodeType":"180","messageId":"181","endLine":18,"endColumn":14},{"ruleId":"178","severity":1,"message":"214","line":44,"column":11,"nodeType":"180","messageId":"181","endLine":44,"endColumn":17},{"ruleId":"178","severity":1,"message":"211","line":11,"column":8,"nodeType":"180","messageId":"181","endLine":11,"endColumn":21},{"ruleId":"178","severity":1,"message":"212","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":25},{"ruleId":"178","severity":1,"message":"215","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":15},{"ruleId":"178","severity":1,"message":"213","line":16,"column":10,"nodeType":"180","messageId":"181","endLine":16,"endColumn":14},{"ruleId":"178","severity":1,"message":"214","line":66,"column":10,"nodeType":"180","messageId":"181","endLine":66,"endColumn":16},{"ruleId":"178","severity":1,"message":"216","line":68,"column":10,"nodeType":"180","messageId":"181","endLine":68,"endColumn":23},{"ruleId":"198","severity":1,"message":"217","line":82,"column":46,"nodeType":"200","messageId":"201","endLine":82,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":232,"column":21,"nodeType":"220","messageId":"221","endLine":232,"endColumn":28},{"ruleId":"178","severity":1,"message":"222","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":12},{"ruleId":"178","severity":1,"message":"223","line":9,"column":8,"nodeType":"180","messageId":"181","endLine":9,"endColumn":15},{"ruleId":"178","severity":1,"message":"224","line":10,"column":8,"nodeType":"180","messageId":"181","endLine":10,"endColumn":16},{"ruleId":"178","severity":1,"message":"225","line":11,"column":8,"nodeType":"180","messageId":"181","endLine":11,"endColumn":22},{"ruleId":"178","severity":1,"message":"226","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":20},{"ruleId":"178","severity":1,"message":"227","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":20},{"ruleId":"178","severity":1,"message":"228","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":17},{"ruleId":"178","severity":1,"message":"229","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":16},{"ruleId":"178","severity":1,"message":"209","line":17,"column":10,"nodeType":"180","messageId":"181","endLine":17,"endColumn":19},{"ruleId":"178","severity":1,"message":"230","line":19,"column":8,"nodeType":"180","messageId":"181","endLine":19,"endColumn":21},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'ChatProvider' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"231","text":"232"},"'Navigate' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'ThemeProvider' is defined but never used.","'navigate' is assigned a value but never used.","'defaultTheme' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Copyright' is defined but never used.","'authenticate' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'getNotification' is assigned a value but never used.","'Stack' is defined but never used.","'ProfileModal' is defined but never used.","'ChatState' is defined but never used.","'isAuthenticated' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'blue' is defined but never used.","'search' is assigned a value but never used.","'AddIcon' is defined but never used.","'renameLoading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'UserBadgeItem' is defined but never used.",[773,780],"\r\n    ."]