[{"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js":"1","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js":"3","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js":"4","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js":"5","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js":"6","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js":"7","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js":"8","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js":"9","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js":"10","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\CreateGroupChat.js":"11","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js":"12","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js":"13","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js":"14","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js":"15","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js":"16","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js":"17","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\miscella\\profile.js":"18"},{"size":535,"mtime":1685956485937,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1685956486302,"results":"21","hashOfConfig":"20"},{"size":299,"mtime":1686115239203,"results":"22","hashOfConfig":"20"},{"size":836,"mtime":1686115232683,"results":"23","hashOfConfig":"20"},{"size":1294,"mtime":1686113568497,"results":"24","hashOfConfig":"20"},{"size":95,"mtime":1685995161032,"results":"25","hashOfConfig":"20"},{"size":5241,"mtime":1686022377277,"results":"26","hashOfConfig":"20"},{"size":4470,"mtime":1685998422633,"results":"27","hashOfConfig":"20"},{"size":4628,"mtime":1686116868721,"results":"28","hashOfConfig":"20"},{"size":184,"mtime":1686023659968,"results":"29","hashOfConfig":"20"},{"size":5855,"mtime":1686111834452,"results":"30","hashOfConfig":"20"},{"size":3470,"mtime":1686115568069,"results":"31","hashOfConfig":"20"},{"size":195,"mtime":1685988125170,"results":"32","hashOfConfig":"20"},{"size":996,"mtime":1686086982650,"results":"33","hashOfConfig":"20"},{"size":677,"mtime":1686111558555,"results":"34","hashOfConfig":"20"},{"size":499,"mtime":1686085172728,"results":"35","hashOfConfig":"20"},{"size":240,"mtime":1686087447552,"results":"36","hashOfConfig":"20"},{"size":1739,"mtime":1686117000374,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1a61mm9",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js",[],[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js",["96","97"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js",["98"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js",["99","100","101","102","103","104"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {signup} from \"./Helper/APIcalls\"\r\n\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\n\r\n// --------------------------------------------------------\r\nexport default function Signup() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [name , setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        if(name===\"name\"){\r\n            setName(event.target.value);\r\n        }\r\n        else if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!name || !email || !password){\r\n          setShow(true);\r\n        }\r\n        else{\r\n          signup({name,email,password}).then(data => {\r\n            setSuccess(true);\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            console.log(data);\r\n        }\r\n        )\r\n        }\r\n      \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Signed Up Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={name}\r\n                  name=\"Name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"Name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                  onChange={handleChange(\"name\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n             \r\n              sx={[{ mt: 3, mb: 2, bgcolor:\"blue\" },{\r\n                '&:hover':{\r\n                    bgcolor: \"#2827CC\"\r\n                }\r\n              }]}\r\n            onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"http://localhost:3000/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js",["105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js",["118","119","120","121","122","123","124","125"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {login} from \"./Helper/APIcalls\"\r\nimport { authenticate } from './Helper/APIcalls';\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport { ChatState } from '../../main/chatProvider';\r\n// --------------------------------------------------------\r\nexport default function Login() {\r\n    const [show, setShow] = useState(false);\r\n    const { setUser } = ChatState();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        \r\n        if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!email || !password){\r\n          setShow(true);\r\n          \r\n        }\r\n        else{  \r\n            login({email,password}).then(data => {\r\n              \r\n              localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n              setUser(data);\r\n              console.log(data.user);  \r\n            }\r\n            )\r\n        }\r\n       \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Logined Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           Sign In\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={[{ mt: 3, mb: 2, bgcolor:\"blue\" },{\r\n                '&:hover':{\r\n                    bgcolor: \"#2827CC\"\r\n                }\r\n              }]\r\n            }\r\n            onClick={handleSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\CreateGroupChat.js",["126","127","128","129","130","131","132","133"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js",["134"],[],"import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { API } from \"../backend\";\r\nimport { getOtherUsers } from '../configuration/logic';\r\nconst ChatContext=createContext(\"\");\r\nconst ChatProvider=({children})=>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [chat,setChat]=useState();\r\n    const [error,setError]=useState();\r\n    const [user,setUser]=useState();\r\n    const [selectedChat,setSelectedChat]=useState();\r\n    const [notification,setNotification]=useState();\r\n\r\n    useEffect(()=>{\r\n        const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        setUser(userInfo);\r\n    },[navigate])\r\n\r\n    const getNotification=(userId)=>{\r\n        \r\n        var array=[];\r\n        \r\n        const {data}=fetch(`${API}/getnotification/${userId}`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                Authorization: `Bearer ${user.token}` \r\n            },\r\n            body:{\r\n               array \r\n            }\r\n        });\r\n        data.notification.forEach((ele)=>{\r\n            array.push(ele.message);\r\n        });\r\n        setNotification(array);\r\n        if(!user){\r\n    return;\r\n        }return {data}\r\n        .then(res=>{\r\n            return res.json()\r\n        })\r\n        .catch(err=>console.log({\r\n            title: \"Error fetching the Notifications\",\r\n            description: error.message,\r\n            status: \"error\",\r\n            isClosable: true,\r\n            position: \"top\",\r\n        }))\r\n       };\r\n   const removeNotification=(chatId)=>{\r\n    //need to change from backend\r\n   \r\n    //improve backend route in user router\r\n    const {data}=fetch(`${API}/deletenotification/`,\r\n\r\n      {\r\n        method:\"PUT\",\r\n        headers:{\r\n            Authorization: `Bearer ${user.token}` \r\n        },\r\n        body:{\r\n            userId: user._id,\r\n            chatId: chatId,\r\n            \r\n          },\r\n    });\r\n    var array=[];\r\n    data.notification.forEach((ele)=>{\r\n        array.push(ele.message);\r\n    });\r\n    setNotification(array);\r\n    if(!user){\r\nreturn;\r\n    }return {data}\r\n    .then(res=>{\r\n        return res.json()\r\n    })\r\n    .catch(err=>console.log({\r\n        title: \"Error deleting the Notifications\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n    }))\r\n   };\r\n   \r\n   const sendNotification=(data,userId)=>{\r\n    const recievers=getOtherUsers(user,selectedChat.users);\r\n    \r\n    for(const receiver of recievers){\r\n        //fetching api of send message\r\n        fetch(`${API}/message/send/${userId}`,\r\n        {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${user.token}`,\r\n            },\r\n            body:{\r\n                userId: receiver._id,\r\n                messageId: data._id,\r\n                chatId: data.chat._id,\r\n              },\r\n        })\r\n    }\r\n   }\r\n\r\n   \r\n   \r\n   return (\r\n    <ChatContext.Provider\r\n    value={{\r\n        user,setUser,\r\n        selectedChat,setSelectedChat,\r\n        chat,setChat,\r\n        error,setError,\r\n\r\n        notification,setNotification,\r\n        removeNotification,\r\n        sendNotification,\r\n    }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n   );\r\n};\r\nexport const ChatState=()=>{\r\n    return useContext(ChatContext);\r\n}\r\nexport default ChatProvider","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js",["135"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\miscella\\profile.js",["136"],[],{"ruleId":"137","severity":1,"message":"138","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":15},{"ruleId":"137","severity":1,"message":"141","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":34,"column":7,"nodeType":"144","messageId":"145","endLine":34,"endColumn":8,"fix":"146"},{"ruleId":"137","severity":1,"message":"147","line":3,"column":23,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"148","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24},{"ruleId":"137","severity":1,"message":"149","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":16},{"ruleId":"137","severity":1,"message":"150","line":20,"column":23,"nodeType":"139","messageId":"140","endLine":20,"endColumn":36},{"ruleId":"137","severity":1,"message":"151","line":31,"column":11,"nodeType":"139","messageId":"140","endLine":31,"endColumn":19},{"ruleId":"137","severity":1,"message":"152","line":33,"column":11,"nodeType":"139","messageId":"140","endLine":33,"endColumn":23},{"ruleId":"137","severity":1,"message":"147","line":3,"column":23,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"148","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24},{"ruleId":"137","severity":1,"message":"149","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":16},{"ruleId":"137","severity":1,"message":"150","line":20,"column":23,"nodeType":"139","messageId":"140","endLine":20,"endColumn":36},{"ruleId":"137","severity":1,"message":"153","line":26,"column":12,"nodeType":"139","messageId":"140","endLine":26,"endColumn":16},{"ruleId":"137","severity":1,"message":"154","line":26,"column":18,"nodeType":"139","messageId":"140","endLine":26,"endColumn":25},{"ruleId":"137","severity":1,"message":"155","line":30,"column":12,"nodeType":"139","messageId":"140","endLine":30,"endColumn":19},{"ruleId":"137","severity":1,"message":"156","line":30,"column":21,"nodeType":"139","messageId":"140","endLine":30,"endColumn":31},{"ruleId":"137","severity":1,"message":"151","line":31,"column":11,"nodeType":"139","messageId":"140","endLine":31,"endColumn":19},{"ruleId":"137","severity":1,"message":"152","line":33,"column":11,"nodeType":"139","messageId":"140","endLine":33,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":35,"column":16,"nodeType":"159","messageId":"160","endLine":35,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":38,"column":21,"nodeType":"159","messageId":"160","endLine":38,"endColumn":23},{"ruleId":"137","severity":1,"message":"161","line":59,"column":14,"nodeType":"139","messageId":"140","endLine":59,"endColumn":23},{"ruleId":"137","severity":1,"message":"147","line":3,"column":23,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"162","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":22},{"ruleId":"137","severity":1,"message":"148","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24},{"ruleId":"137","severity":1,"message":"149","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":16},{"ruleId":"137","severity":1,"message":"163","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":12},{"ruleId":"137","severity":1,"message":"150","line":20,"column":23,"nodeType":"139","messageId":"140","endLine":20,"endColumn":36},{"ruleId":"137","severity":1,"message":"151","line":30,"column":11,"nodeType":"139","messageId":"140","endLine":30,"endColumn":19},{"ruleId":"137","severity":1,"message":"152","line":32,"column":11,"nodeType":"139","messageId":"140","endLine":32,"endColumn":23},{"ruleId":"137","severity":1,"message":"164","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":29},{"ruleId":"137","severity":1,"message":"165","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"166","line":15,"column":8,"nodeType":"139","messageId":"140","endLine":15,"endColumn":25},{"ruleId":"137","severity":1,"message":"167","line":18,"column":10,"nodeType":"139","messageId":"140","endLine":18,"endColumn":14},{"ruleId":"137","severity":1,"message":"168","line":44,"column":11,"nodeType":"139","messageId":"140","endLine":44,"endColumn":17},{"ruleId":"137","severity":1,"message":"169","line":48,"column":10,"nodeType":"139","messageId":"140","endLine":48,"endColumn":13},{"ruleId":"137","severity":1,"message":"170","line":49,"column":17,"nodeType":"139","messageId":"140","endLine":49,"endColumn":22},{"ruleId":"137","severity":1,"message":"171","line":49,"column":24,"nodeType":"139","messageId":"140","endLine":49,"endColumn":32},{"ruleId":"137","severity":1,"message":"172","line":22,"column":11,"nodeType":"139","messageId":"140","endLine":22,"endColumn":26},{"ruleId":"137","severity":1,"message":"173","line":2,"column":23,"nodeType":"139","messageId":"140","endLine":2,"endColumn":28},{"ruleId":"137","severity":1,"message":"174","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":19},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'ChatProvider' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"175","text":"176"},"'Navigate' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'ThemeProvider' is defined but never used.","'navigate' is assigned a value but never used.","'defaultTheme' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Copyright' is defined but never used.","'authenticate' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'blue' is defined but never used.","'search' is assigned a value but never used.","'jwt' is assigned a value but never used.","'chats' is assigned a value but never used.","'setChats' is assigned a value but never used.","'getNotification' is assigned a value but never used.","'Stack' is defined but never used.","'ChatState' is defined but never used.",[773,780],"\r\n    ."]