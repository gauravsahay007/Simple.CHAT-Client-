[{"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js":"1","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js":"3","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js":"4","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js":"5","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js":"6","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js":"7","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js":"8","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js":"9","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js":"10","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js":"11","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js":"12","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js":"13","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js":"14","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js":"15","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js":"16","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\profile.js":"17","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\CreateGroupChat.js":"18","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\UpdateGroupChat.js":"19","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\SideBar.js":"20","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\chatloading.js":"21","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Pages\\ChatPage.js":"22","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\ChatBox.js":"23","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\SingleChat.js":"24","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\ScrollableChats.js":"25","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Helper.js":"26"},{"size":535,"mtime":1685956485937,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1685956486302,"results":"29","hashOfConfig":"28"},{"size":267,"mtime":1686552481692,"results":"30","hashOfConfig":"28"},{"size":871,"mtime":1686306228359,"results":"31","hashOfConfig":"28"},{"size":1294,"mtime":1686113568497,"results":"32","hashOfConfig":"28"},{"size":95,"mtime":1685995161032,"results":"33","hashOfConfig":"28"},{"size":5247,"mtime":1687267527140,"results":"34","hashOfConfig":"28"},{"size":4470,"mtime":1685998422633,"results":"35","hashOfConfig":"28"},{"size":4655,"mtime":1687266926715,"results":"36","hashOfConfig":"28"},{"size":4245,"mtime":1687274515030,"results":"37","hashOfConfig":"28"},{"size":2235,"mtime":1687169377500,"results":"38","hashOfConfig":"28"},{"size":2156,"mtime":1687204011246,"results":"39","hashOfConfig":"28"},{"size":4798,"mtime":1687276171400,"results":"40","hashOfConfig":"28"},{"size":702,"mtime":1687265297728,"results":"41","hashOfConfig":"28"},{"size":511,"mtime":1687272397014,"results":"42","hashOfConfig":"28"},{"size":300,"mtime":1686218125546,"results":"43","hashOfConfig":"28"},{"size":2717,"mtime":1687273658082,"results":"44","hashOfConfig":"28"},{"size":6470,"mtime":1687265815273,"results":"45","hashOfConfig":"28"},{"size":8659,"mtime":1687273125903,"results":"46","hashOfConfig":"28"},{"size":3994,"mtime":1687264900843,"results":"47","hashOfConfig":"28"},{"size":543,"mtime":1686217428264,"results":"48","hashOfConfig":"28"},{"size":948,"mtime":1687269751681,"results":"49","hashOfConfig":"28"},{"size":911,"mtime":1687270824371,"results":"50","hashOfConfig":"28"},{"size":9585,"mtime":1687279194293,"results":"51","hashOfConfig":"28"},{"size":1950,"mtime":1687279183485,"results":"52","hashOfConfig":"28"},{"size":1405,"mtime":1686310654069,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1a61mm9",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\index.js",[],[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\App.js",["144","145"],[],"import React from 'react'\nimport {  Box } from '@mui/material'\nimport Routers from \"./Router\"\nimport io from \"socket.io-client\"\n\nexport default function App() {\n  \n  return (\n    <React.StrictMode>\n      \n       <Routers/> \n    \n\n      </React.StrictMode>\n    \n  )\n}\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Router.js",["146"],[],"import React from 'react'\r\nimport { Route,Routes,BrowserRouter } from 'react-router-dom'\r\nimport ChatProvider from './main/chatProvider'\r\n\r\n// -------------------------------------------\r\nimport Signup from './Components/Auth/Signup'\r\nimport Login from './Components/Auth/Login'\r\nimport Mychats from './Components/Mychats'\r\n\r\nimport Test from './test'\r\nimport ChatPage from './Pages/ChatPage'\r\n// --------------------------------------------\r\nexport default function Router() {\r\n  \r\n  return (\r\n   \r\n       <BrowserRouter>\r\n        <ChatProvider>\r\n    <Routes>\r\n        <Route path='/signup' exact element={<Signup/>} />\r\n        <Route path='/login' exact element={<Login/>} />\r\n        <Route path='/chats' exact element={<ChatPage/>} />\r\n        <Route path='/test' exact element={<Test/>}/>\r\n    </Routes>\r\n    </ChatProvider>\r\n    </BrowserRouter>\r\n  \r\n   \r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Helper\\APIcalls.js",["147"],[],"import {API} from \"../../../backend\"\r\n\r\n\r\nexport const login = (user) => {\r\n    \r\n    return fetch(`${API}/login`,{\r\n        method:\"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(resp => {\r\n        return resp.json();\r\n    })\r\n    .catch(err => {return err })\r\n}\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n\r\n    }).then((resp,err)=>{\r\n        if(err){\r\n            return ;\r\n        }\r\n        else return resp.json();\r\n    }).\r\n    catch(err=>{\r\n        console.log(err);\r\n        return\r\n    })\r\n}\r\n\r\nexport const authenticate = (data, next) =>{\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.setItem(\"jwt\",JSON.stringify(data))\r\n\r\n        next();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if(typeof window == \"undefined\"){\r\n        return false\r\n    }\r\n    if(localStorage.getItem(\"jwt\")){\r\n        \r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n        \r\n    }\r\n    else{\r\n        return false    }\r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\backend.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Signup.js",["148","149","150","151","152","153"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\login.js",["154","155","156","157","158","159","160","161","162","163","164","165","166"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Auth\\Login.js",["167","168","169","170","171","172","173","174"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {login} from \"./Helper/APIcalls\"\r\nimport { authenticate } from './Helper/APIcalls';\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport { ChatState } from '../../main/chatProvider';\r\n// --------------------------------------------------------\r\nexport default function Login() {\r\n    const [show, setShow] = useState(false);\r\n    const { setUser } = ChatState();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        \r\n        if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!email || !password){\r\n          setShow(true);\r\n          \r\n        }\r\n        else{  \r\n            login({email,password}).then(data => {\r\n              setSuccess(true);\r\n              localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n              \r\n              setUser(data);\r\n              console.log(data);\r\n                \r\n              console.log(data.user);  \r\n            }\r\n            )\r\n        }\r\n       \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Logined Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#32465A' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           Sign In\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n           \r\n         <Button fullWidth variant=\"filled\" sx={[{color:\"white\", bgcolor:\"#32465A\",mt:\"10px\",mr:\"5px\"},{\r\n          \"&:hover\":{\r\n            bgcolor:\"#32465F\",\r\n            color:\"white\",\r\n            \r\n          }\r\n        \r\n        }]} onClick={handleSubmit}>\r\n              Login\r\n            </Button>\r\n\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n",[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Mychats.js",["175","176","177","178","179","180"],[],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport CreateGroupChat from './Modals/CreateGroupChat'\r\nimport {Avatar} from '@mui/material'\r\nimport { ChatState } from '../main/chatProvider'\r\nimport { FetchChats } from './Helper';\r\nimport { getOtherUser } from '../configuration/logic';\r\nimport ChatLoading from './chatloading'\r\n// --------------------------------------------\r\n// MUI\r\nimport { Box , Stack, Typography} from '@mui/material'\r\n\r\n// --------------------------------------------\r\n\r\nexport default function Mychats({fetchAgain,setFetchAgain}) {\r\n  const {\r\n    selectedChat,\r\n    setSelectedChat,\r\n    user,\r\n    chats,\r\n    setChats,\r\n    notification,\r\n    removeNotification,\r\n  } = ChatState();\r\n\r\n  const [loggedUser, setLoggedUser] = useState(user);\r\nconst [loading, setLoading] = useState(false);\r\n const fetchChats = () =>{\r\n  try{\r\n  FetchChats(user).then((response)=>{\r\n    // console.log(response);\r\n    setChats(response);\r\n    \r\n  })\r\n}catch(err){\r\n  console.log(err);\r\n }}\r\n   \r\n \r\n\r\n  useEffect(()=>{\r\n  \r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")))\r\n    fetchChats();\r\n    // console.log(\"fetched again MyChats.js\");\r\n  },[fetchAgain]);\r\n\r\n  const selectChat = (chat) =>{\r\n    \r\n    setSelectedChat(chat);\r\n    removeNotification(user,chat._id);\r\n    setFetchAgain(!fetchAgain);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: { md: selectedChat ? 'flex' : 'flex', xs: selectedChat ? 'none' : 'flex' },\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          bgcolor: 'white',\r\n          height: '94vh',\r\n          mt: '10px',\r\n          m: { xs: 'auto', md: '0px', lg: '0px' },\r\n          borderRadius: '4px',\r\n          mr: { xs: 'auto', md: 'auto', lg: 'auto' },\r\n        }}\r\n      >\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n          <Typography sx={{ color: '#32465A', mt: '5px', ml: '10px' }}>MY CHATS</Typography>\r\n          <CreateGroupChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            bgcolor: '#F0EEED',\r\n            p: '10px',\r\n            borderRadius: '4px',\r\n            width: '100vw',\r\n            mt: '10px',\r\n            height: '90%',\r\n            mr: { xs: '0px', md: 'auto' },\r\n            ml: { xs: '0px', md: '5px', lg: '5px' },\r\n            width: { xs: '90vw', md: '30vw', lg: '30vw' },\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          {chats ? (\r\n            <Stack sx={{ width: '100%', cursor: 'pointer' }}>\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => selectChat(chat)}\r\n                  sx={{\r\n                    bgcolor: '#2C3E50',\r\n                    color: 'white',\r\n                    mb: '2px',\r\n                    width: '100%',\r\n                    height: '3rem',\r\n                    borderRadius: '4px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    padding: '0 10px',\r\n                  }}\r\n                  key={chat._id}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Avatar sx={{ width: '30px', height: '30px', mt: '3px', ml: '3px' }} cursor=\"pointer\" src={user.pic} />\r\n                    <Typography sx={{ ml: '5px' }}>\r\n                      {!chat.isGroupChat ? chat.chatName : chat.chatName}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {chat.latestMessage && (\r\n                    <Typography sx={{ color: 'white', ml: 'auto' }}>\r\n                      {!chat.isGroupChat\r\n                        ? chat.latestMessage.content\r\n                        : chat.latestMessage.sender._id === loggedUser.user._id\r\n                        ? `You: ${chat.latestMessage.content}`\r\n                        : `${chat.latestMessage.sender.name}: ${chat.latestMessage.content}`}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <ChatLoading />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\main\\chatProvider.js",["181","182","183","184","185"],[],"import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { API } from \"../backend\";\r\nimport { getOtherUsers } from '../configuration/logic';\r\nimport { GetNotification, RemoveNotification } from '../Helper';\r\nimport { SendNotification } from '../Components/Helper';\r\n\r\nconst ChatContext=createContext(\"\");\r\n\r\nconst ChatProvider=({children})=>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [chats,setChats]=useState();\r\n    const [error,setError]=useState();\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    const [selectedChat,setSelectedChat]=useState();\r\n    const [notification,setNotification]=useState([]);\r\n\r\n\r\n    const getNotification=(userId)=>{\r\n        try{\r\n            GetNotification(user).then(data=>{\r\n                var notificationArray = [] ;\r\n                data.notifications.forEach((element)=>{\r\n                    notificationArray.push(element.message);\r\n                })\r\n                setNotification(notificationArray);\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n       };\r\n   const removeNotification=(user,chatId)=>{\r\n    // console.log(user);\r\n    try{\r\n        RemoveNotification(user,chatId).then(data=>{\r\n            var notificationArray = [];\r\n            data.notifications.forEach((element)=>{\r\n                notificationArray.push(element.message);\r\n            })\r\n            setNotification(notificationArray)\r\n        })\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n   };\r\n   \r\n   const sendNotification=(response)=>{\r\n     try{\r\n      SendNotification(user, response)\r\n     }\r\n     catch(err){\r\n        console.log(err);\r\n     }\r\n   }\r\n\r\n   \r\n   \r\n   return (\r\n    <ChatContext.Provider\r\n    value={{\r\n        user,setUser,\r\n        selectedChat,setSelectedChat,\r\n        chats,setChats,\r\n        error,setError,\r\n        notification,setNotification,\r\n        removeNotification,\r\n        sendNotification,\r\n    }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n   );\r\n};\r\nexport const ChatState=()=>{\r\n    return useContext(ChatContext);\r\n}\r\nexport default ChatProvider","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\configuration\\logic.js",["186"],[],"import { GetUser } from \"../Components/Helper\";\r\n\r\nexport const getOtherUser=(loggedUser,users)=>{\r\n    // console.log(users);\r\n    if(!users || users.length < 1){\r\n     return ;\r\n    }\r\n //    if it is one to one chat then other user will be either first in the array or the second one\r\n    if(users[0]._id==loggedUser.user._id){\r\n        // console.log(users[1]._id);\r\n        \r\n        return GetUser(users[1]._id,loggedUser) ;\r\n    }\r\n    else {\r\n        // console.log(users[0]._id);\r\n      \r\n        return GetUser(users[0]._id,loggedUser);\r\n    }\r\n } \r\n\r\n export const getOtherUsers = (loggedUser, users) => {\r\n    var arr = [];\r\n    users.forEach((user)=> {\r\n        if(user._id  !== loggedUser._id){\r\n            arr.push(user)\r\n        }\r\n    });\r\n    return arr;\r\n }\r\n\r\n//   this function is used to determine if the current message should be displayed with a different styling or formatting compared to the next message, based on the sender's identity\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n    return (i < messages.length - 1 && messages[i + 1].sender._id !== m.sender._id);\r\n}\r\n\r\n// this function can be used to determine if the current message is the last message in the conversation, and if it is sent by a different user than the userId, indicating that it may require a different styling\r\n export const isLastMessage = (messages, i, userId) => {\r\n    return (\r\n        i === messages.length -1 &&\r\n         messages[messages.length - 1].sender._id !== userId && messages[messages.length - 1].sender._id\r\n    )\r\n }\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n    if(\r\n        i<messages.length-1 && messages[i+1].sender._id === m.sender._id && messages[i].sender._id !== userId\r\n    ){\r\n        return 1;\r\n    }\r\n\r\n    else if(\r\n        (i<messages.length-1 && messages[i+1].sender._id !== m.sender._id && messages[i].sender._id !== userId) ||( i === messages.length-1 && messages[i].sender._id !== userId )\r\n    ){\r\n        return 0;\r\n    }\r\n\r\n    else return \"auto\";\r\n}\r\n\r\n\r\nexport const isSameUser = (messages, m ,i) => {\r\n    return i > 0 && messages[i-1].sender._id === m.sender._id;\r\n} \r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Helper.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserListItem.js",["187"],[],"import React from 'react'\r\nimport { Box, Avatar, Stack, Typography } from '@mui/material'\r\nexport default function UserListItem({user, handleFunction}) {\r\n\r\n  return (\r\n    <Box onClick={handleFunction} sx={[{bgcolor:\"#E8E8E8\",mt:\"5px\",mb:\"5px\",borderRadius:1 , p:\"5px\", display:\"flex\" , gap:\"20px\",cursor:\"pointer\"},{\r\n        '&:hover':{\r\n            bgcolor:\"#2C3E50\",\r\n            color:\"white\"\r\n        }\r\n    }]}>\r\n        <Avatar sx={{  width: 38, height: 38, border:\"1px solid black\" }} src={user.pic}/>\r\n    <Box sx={{display:\"flex\", flexDirection:\"column\"}}>\r\n        <Typography>{user.name}</Typography>\r\n        <Typography  >{user.email}</Typography>\r\n    </Box>\r\n   \r\n    </Box>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Avatar\\UserBadgeItem.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\test.js",["188"],[],"import React from \"react\";\r\nimport ProfileModal from \"./Components/Modals/profile\";\r\nimport SideBar from \"./Components/Modals/SideBar\";\r\nexport default function Test(){\r\n    \r\n\r\n        return (\r\n            <div> \r\n                <SideBar/>\r\n                \r\n            </div>\r\n          )\r\n  \r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\profile.js",["189","190","191","192","193","194","195"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\CreateGroupChat.js",["196","197","198","199","200","201"],[],"import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { ChatState } from '../../main/chatProvider';\r\nimport { CreateGroup, SearchUsers } from '../Helper';\r\nimport { isAuthenticated } from '../Auth/Helper/APIcalls';\r\nimport UserListItem from '../Avatar/UserListItem';\r\n\r\n// ----------------------------------------------\r\n// Material UI\r\nimport { Typography, Grid, Snackbar, CircularProgress, Stack, Alert, Box, SxProps} from '@mui/material';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AddIcon from '@mui/icons-material/Add'; \r\nimport { blue } from '@mui/material/colors';\r\nimport UserBadgeItem from '../Avatar/UserBadgeItem';\r\n\r\n\r\n// ------------------------------------------------\r\n\r\n\r\n\r\nexport default function CreateGroupChat({fetchAgain, setFetchAgain}) {\r\n// ----------------------------------------------\r\n// dialog box\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   -----------------------------------------------------\r\n\r\n\r\n\r\n// -------------------------------------------------------\r\n// states\r\n   const [groupChatName, setGroupChatName] = useState();\r\n   const [selectedUsers, setSelectedUsers] = useState([]);\r\n   const [search, setSearch] = useState();\r\n   const [searchResults, setSearchResults] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  const {user} = ChatState();\r\n \r\n   \r\n//   console.log(user);\r\n  \r\n   \r\n   \r\n   \r\n\r\n// -------------------------------------------------------\r\n\r\n// -------------------------------------------------------\r\n// handle functions\r\n\r\nconst handleSearch = (query) => {\r\n    setSearch(query); \r\n    if(!query){\r\n        return;\r\n    } \r\n\r\n    try{\r\n        setLoading(true);\r\n        SearchUsers(user,query).then((response,err)=>{\r\n            setSearchResults(response)\r\n           \r\n           setFetch(!fetch);\r\n    \r\n        })\r\n    }catch(err){\r\n        \r\n        console.log(err);\r\n        return;\r\n    }\r\n} \r\nuseEffect(()=>{\r\n  setTimeout(()=>{\r\n    setLoading(false);\r\n  },1000)\r\n},[fetch])\r\nconst handleSubmit = () =>{\r\n    if(!groupChatName || !selectedUsers){\r\n        return;\r\n    }\r\n    try{\r\n        CreateGroup(user,selectedUsers,groupChatName).then((response,err)=>{\r\n            // console.log(response);\r\n            setFetchAgain(!fetchAgain);\r\n        })\r\n    }\r\n    catch(err){ \r\n        console.log(err);\r\n        return ;\r\n    }\r\n}\r\n\r\nconst handleGroup = (userToAdd) => {\r\n    if(selectedUsers.includes(userToAdd)){\r\n        <Snackbar open={open} onClose={handleClose} autoHideDuration={4000}>\r\n        <Alert  severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          User Already Added!!\r\n        </Alert>\r\n      </Snackbar>\r\n      return ;\r\n      \r\n\r\n    }\r\n    else  setSelectedUsers([...selectedUsers, userToAdd]);\r\n    \r\n}\r\n\r\nconst handleDelete=(userToDelete)=>{\r\n    setSelectedUsers(\r\n        selectedUsers.filter((sel) => sel._id !== userToDelete._id)\r\n      );\r\n}\r\n// -------------------------------------------------------\r\n\r\nconst sx = {\r\n  \"& .MuiDialog-container\": {\r\n    alignItems: \"flex-start\"\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"filled\" sx={[{color:\"white\", bgcolor:\"#32465A\",mt:\"5px\",mr:\"5px\"},{\r\n        \"&:hover\":{\r\n          bgcolor:\"#32465F\",\r\n          color:\"white\",\r\n          \r\n        }\r\n      \r\n      }]} onClick={handleClickOpen}>\r\n        Create Group <AddIcon sx={{ fontSize: 22, mb : \"3px\", ml : \"5px\", color:\"white\" }}/>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\"  sx={sx}\r\n      fullWidth\r\n    scroll=\"paper\">\r\n        <DialogTitle   >\r\n        <Typography sx={{fontSize: \"30px\" }} variant=\"h5\" align=\"center\">\r\n    Create Group Chat\r\n</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n         \r\n        <Grid item xs={12} sx={{mb:\"10px\", mt:\"5px\" }}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  id=\"group name\"\r\n                  label=\"Group Name\"\r\n                  value={groupChatName}\r\n                  onChange={(event)=>{ setGroupChatName(event.target.value)}}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sx={{mb:\"10px\" , mt: \"10px\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  id=\"add users\"\r\n                  label=\"Add Users\"\r\n                  onChange={(e)=>handleSearch(e.target.value) }\r\n                />\r\n\r\n                <Box sx={{display:\"flex\", fontSize:\"10px\", gap:\"5px\"}}>\r\n                    {selectedUsers.map((u)=>(\r\n                        <UserBadgeItem key={u._id} user={u} handlerfunction={()=>{handleDelete(u)}}/>\r\n                    ))}\r\n                </Box>\r\n\r\n            <Stack direction=\"row\" spacing={10}>  \r\n                <Button variant='filled'  sx={[{bgcolor:\"#2C3E50\", color:\"white\", mt:\"5px\"},{\r\n                                '&:hover':{\r\n                                    bgcolor: \"white\",\r\n                                    color:\"#2C3E50\",\r\n                                    border:\"1px solid #2C3E50\"\r\n                                }\r\n                            }]\r\n                        } onClick={handleSubmit}>Create Chat</Button>\r\n    {loading? (\r\n        <div> <CircularProgress size=\"25px\" sx={{mt:\"12px\"}}/></div>\r\n                   \r\n                  ):( <div></div> )} \r\n                    \r\n            </Stack> \r\n\r\n            {loading? (\r\n        <div> </div> \r\n                  ):(\r\n                    searchResults\r\n                    ?.slice(0, 4)\r\n                    .map((user) => (\r\n                      <UserListItem key={user._id} user={user} handleFunction={()=>handleGroup(user)}/>\r\n                     \r\n                    )))}\r\n           \r\n              </Grid>\r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n\r\n          \r\n\r\n    </div>\r\n  );\r\n}","C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\UpdateGroupChat.js",["202","203","204","205","206","207","208","209"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\Modals\\SideBar.js",["210"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\chatloading.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Pages\\ChatPage.js",[],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\ChatBox.js",["211","212"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\SingleChat.js",["213","214","215","216","217","218","219","220","221","222","223","224"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Components\\ScrollableChats.js",["225","226","227","228","229","230","231","232"],[],"C:\\Users\\Dell\\Simple.CHAT-Client-\\client\\src\\Helper.js",[],[],{"ruleId":"233","severity":1,"message":"234","line":2,"column":11,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"237","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":10},{"ruleId":"233","severity":1,"message":"238","line":8,"column":8,"nodeType":"235","messageId":"236","endLine":8,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":34,"column":7,"nodeType":"241","messageId":"242","endLine":34,"endColumn":8,"fix":"243"},{"ruleId":"233","severity":1,"message":"244","line":3,"column":23,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"245","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":24},{"ruleId":"233","severity":1,"message":"246","line":13,"column":8,"nodeType":"235","messageId":"236","endLine":13,"endColumn":16},{"ruleId":"233","severity":1,"message":"247","line":20,"column":23,"nodeType":"235","messageId":"236","endLine":20,"endColumn":36},{"ruleId":"233","severity":1,"message":"248","line":31,"column":11,"nodeType":"235","messageId":"236","endLine":31,"endColumn":19},{"ruleId":"233","severity":1,"message":"249","line":33,"column":11,"nodeType":"235","messageId":"236","endLine":33,"endColumn":23},{"ruleId":"233","severity":1,"message":"244","line":3,"column":23,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"245","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":24},{"ruleId":"233","severity":1,"message":"246","line":13,"column":8,"nodeType":"235","messageId":"236","endLine":13,"endColumn":16},{"ruleId":"233","severity":1,"message":"247","line":20,"column":23,"nodeType":"235","messageId":"236","endLine":20,"endColumn":36},{"ruleId":"233","severity":1,"message":"250","line":26,"column":12,"nodeType":"235","messageId":"236","endLine":26,"endColumn":16},{"ruleId":"233","severity":1,"message":"251","line":26,"column":18,"nodeType":"235","messageId":"236","endLine":26,"endColumn":25},{"ruleId":"233","severity":1,"message":"252","line":30,"column":12,"nodeType":"235","messageId":"236","endLine":30,"endColumn":19},{"ruleId":"233","severity":1,"message":"253","line":30,"column":21,"nodeType":"235","messageId":"236","endLine":30,"endColumn":31},{"ruleId":"233","severity":1,"message":"248","line":31,"column":11,"nodeType":"235","messageId":"236","endLine":31,"endColumn":19},{"ruleId":"233","severity":1,"message":"249","line":33,"column":11,"nodeType":"235","messageId":"236","endLine":33,"endColumn":23},{"ruleId":"254","severity":1,"message":"255","line":35,"column":16,"nodeType":"256","messageId":"257","endLine":35,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":38,"column":21,"nodeType":"256","messageId":"257","endLine":38,"endColumn":23},{"ruleId":"233","severity":1,"message":"258","line":59,"column":14,"nodeType":"235","messageId":"236","endLine":59,"endColumn":23},{"ruleId":"233","severity":1,"message":"244","line":3,"column":23,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"259","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":22},{"ruleId":"233","severity":1,"message":"245","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":24},{"ruleId":"233","severity":1,"message":"246","line":13,"column":8,"nodeType":"235","messageId":"236","endLine":13,"endColumn":16},{"ruleId":"233","severity":1,"message":"260","line":14,"column":8,"nodeType":"235","messageId":"236","endLine":14,"endColumn":12},{"ruleId":"233","severity":1,"message":"247","line":20,"column":23,"nodeType":"235","messageId":"236","endLine":20,"endColumn":36},{"ruleId":"233","severity":1,"message":"248","line":30,"column":11,"nodeType":"235","messageId":"236","endLine":30,"endColumn":19},{"ruleId":"233","severity":1,"message":"249","line":32,"column":11,"nodeType":"235","messageId":"236","endLine":32,"endColumn":23},{"ruleId":"233","severity":1,"message":"261","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":22},{"ruleId":"233","severity":1,"message":"262","line":22,"column":5,"nodeType":"235","messageId":"236","endLine":22,"endColumn":17},{"ruleId":"233","severity":1,"message":"252","line":27,"column":8,"nodeType":"235","messageId":"236","endLine":27,"endColumn":15},{"ruleId":"233","severity":1,"message":"253","line":27,"column":17,"nodeType":"235","messageId":"236","endLine":27,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":46,"column":5,"nodeType":"265","endLine":46,"endColumn":17,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":86,"column":13,"nodeType":"269","messageId":"257","endLine":86,"endColumn":18},{"ruleId":"233","severity":1,"message":"270","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":19},{"ruleId":"233","severity":1,"message":"271","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"272","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":23},{"ruleId":"233","severity":1,"message":"248","line":13,"column":11,"nodeType":"235","messageId":"236","endLine":13,"endColumn":19},{"ruleId":"233","severity":1,"message":"273","line":22,"column":11,"nodeType":"235","messageId":"236","endLine":22,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":9,"column":20,"nodeType":"256","messageId":"257","endLine":9,"endColumn":22},{"ruleId":"233","severity":1,"message":"274","line":2,"column":23,"nodeType":"235","messageId":"236","endLine":2,"endColumn":28},{"ruleId":"233","severity":1,"message":"275","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":20},{"ruleId":"233","severity":1,"message":"270","line":2,"column":19,"nodeType":"235","messageId":"236","endLine":2,"endColumn":28},{"ruleId":"233","severity":1,"message":"276","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":17},{"ruleId":"233","severity":1,"message":"277","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":17},{"ruleId":"233","severity":1,"message":"278","line":23,"column":14,"nodeType":"235","messageId":"236","endLine":23,"endColumn":26},{"ruleId":"233","severity":1,"message":"279","line":23,"column":28,"nodeType":"235","messageId":"236","endLine":23,"endColumn":43},{"ruleId":"233","severity":1,"message":"280","line":25,"column":12,"nodeType":"235","messageId":"236","endLine":25,"endColumn":21},{"ruleId":"233","severity":1,"message":"281","line":25,"column":23,"nodeType":"235","messageId":"236","endLine":25,"endColumn":35},{"ruleId":"233","severity":1,"message":"282","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":25},{"ruleId":"233","severity":1,"message":"283","line":10,"column":75,"nodeType":"235","messageId":"236","endLine":10,"endColumn":82},{"ruleId":"233","severity":1,"message":"284","line":15,"column":8,"nodeType":"235","messageId":"236","endLine":15,"endColumn":21},{"ruleId":"233","severity":1,"message":"285","line":17,"column":8,"nodeType":"235","messageId":"236","endLine":17,"endColumn":25},{"ruleId":"233","severity":1,"message":"286","line":20,"column":10,"nodeType":"235","messageId":"236","endLine":20,"endColumn":14},{"ruleId":"233","severity":1,"message":"287","line":48,"column":11,"nodeType":"235","messageId":"236","endLine":48,"endColumn":17},{"ruleId":"233","severity":1,"message":"270","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"284","line":11,"column":8,"nodeType":"235","messageId":"236","endLine":11,"endColumn":21},{"ruleId":"233","severity":1,"message":"285","line":13,"column":8,"nodeType":"235","messageId":"236","endLine":13,"endColumn":25},{"ruleId":"233","severity":1,"message":"288","line":15,"column":8,"nodeType":"235","messageId":"236","endLine":15,"endColumn":15},{"ruleId":"233","severity":1,"message":"286","line":16,"column":10,"nodeType":"235","messageId":"236","endLine":16,"endColumn":14},{"ruleId":"233","severity":1,"message":"287","line":66,"column":10,"nodeType":"235","messageId":"236","endLine":66,"endColumn":16},{"ruleId":"233","severity":1,"message":"289","line":68,"column":10,"nodeType":"235","messageId":"236","endLine":68,"endColumn":23},{"ruleId":"290","severity":1,"message":"291","line":245,"column":21,"nodeType":"292","messageId":"293","endLine":245,"endColumn":28},{"ruleId":"233","severity":1,"message":"278","line":27,"column":10,"nodeType":"235","messageId":"236","endLine":27,"endColumn":22},{"ruleId":"233","severity":1,"message":"294","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":22},{"ruleId":"295","severity":1,"message":"296","line":20,"column":71,"nodeType":"297","endLine":20,"endColumn":158},{"ruleId":"233","severity":1,"message":"271","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":13},{"ruleId":"233","severity":1,"message":"298","line":8,"column":34,"nodeType":"235","messageId":"236","endLine":8,"endColumn":38},{"ruleId":"233","severity":1,"message":"299","line":8,"column":51,"nodeType":"235","messageId":"236","endLine":8,"endColumn":57},{"ruleId":"233","severity":1,"message":"274","line":8,"column":65,"nodeType":"235","messageId":"236","endLine":8,"endColumn":70},{"ruleId":"233","severity":1,"message":"261","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":22},{"ruleId":"233","severity":1,"message":"300","line":15,"column":10,"nodeType":"235","messageId":"236","endLine":15,"endColumn":18},{"ruleId":"233","severity":1,"message":"277","line":16,"column":10,"nodeType":"235","messageId":"236","endLine":16,"endColumn":17},{"ruleId":"233","severity":1,"message":"301","line":17,"column":10,"nodeType":"235","messageId":"236","endLine":17,"endColumn":16},{"ruleId":"233","severity":1,"message":"302","line":40,"column":9,"nodeType":"235","messageId":"236","endLine":40,"endColumn":27},{"ruleId":"263","severity":1,"message":"303","line":54,"column":7,"nodeType":"265","endLine":54,"endColumn":9,"suggestions":"304"},{"ruleId":"263","severity":1,"message":"305","line":130,"column":7,"nodeType":"265","endLine":130,"endColumn":21,"suggestions":"306"},{"ruleId":"263","severity":1,"message":"307","line":151,"column":7,"nodeType":"265","endLine":151,"endColumn":9,"suggestions":"308"},{"ruleId":"233","severity":1,"message":"309","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":1,"column":18,"nodeType":"235","messageId":"236","endLine":1,"endColumn":21},{"ruleId":"233","severity":1,"message":"274","line":1,"column":30,"nodeType":"235","messageId":"236","endLine":1,"endColumn":35},{"ruleId":"233","severity":1,"message":"310","line":1,"column":37,"nodeType":"235","messageId":"236","endLine":1,"endColumn":44},{"ruleId":"233","severity":1,"message":"311","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":22},{"ruleId":"233","severity":1,"message":"312","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":23},{"ruleId":"233","severity":1,"message":"294","line":7,"column":8,"nodeType":"235","messageId":"236","endLine":7,"endColumn":22},{"ruleId":"233","severity":1,"message":"313","line":9,"column":9,"nodeType":"235","messageId":"236","endLine":9,"endColumn":18},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'Mychats' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"314","text":"315"},"'Navigate' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'ThemeProvider' is defined but never used.","'navigate' is assigned a value but never used.","'defaultTheme' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Copyright' is defined but never used.","'authenticate' is defined but never used.","'Link' is defined but never used.","'getOtherUser' is defined but never used.","'notification' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["316"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'useEffect' is defined but never used.","'API' is defined but never used.","'getOtherUsers' is defined but never used.","'getNotification' is assigned a value but never used.","'Stack' is defined but never used.","'ProfileModal' is defined but never used.","'CloseIcon' is defined but never used.","'GetUser' is defined but never used.","'selectedChat' is assigned a value but never used.","'setSelectedChat' is assigned a value but never used.","'otherUser' is assigned a value but never used.","'setOtherUser' is assigned a value but never used.","'isAuthenticated' is defined but never used.","'SxProps' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'blue' is defined but never used.","'search' is assigned a value but never used.","'AddIcon' is defined but never used.","'renameLoading' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'ScrollableFeed' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'Button' is defined but never used.","'TrySharp' is defined but never used.","'useRef' is defined but never used.","'removeNotification' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'fetchAgain', 'fetchMessages', and 'setFetchAgain'. Either include them or remove the dependency array. If 'setFetchAgain' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"React Hook useEffect has missing dependencies: 'fetchAgain', 'fetchMessages', 'messages', 'notification', 'removeNotifications', 'setFetchAgain', 'setNotification', and 'user'. Either include them or remove the dependency array. If 'setFetchAgain' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'isSameSender' is defined but never used.","'isLastMessage' is defined but never used.","'Scrollbar' is defined but never used.",[773,780],"\r\n    .",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"328","text":"329"},"Update the dependencies array to be: [user]",{"range":"330","text":"331"},"Update the dependencies array to be: [fetchAgain, fetchMessages, selectedChat, setFetchAgain]",{"range":"332","text":"333"},"Update the dependencies array to be: [fetchAgain, fetchMessages, messages, notification, removeNotifications, setFetchAgain, setNotification, user]",{"range":"334","text":"335"},[1193,1205],"[fetchAgain, fetchChats]",[1868,1870],"[user]",[4657,4671],"[fetchAgain, fetchMessages, selectedChat, setFetchAgain]",[5466,5468],"[fetchAgain, fetchMessages, messages, notification, removeNotifications, setFetchAgain, setNotification, user]"]