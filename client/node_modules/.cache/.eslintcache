[{"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Router.js":"4","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\test.js":"5","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\cloudinary.js":"6","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\main\\chatProvider.js":"7","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Mychats.js":"8","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Signup.js":"9","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Login.js":"10","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\backend.js":"11","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Helper.js":"12","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Helper.js":"13","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\chatloading.js":"14","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\configuration\\logic.js":"15","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Helper\\APIcalls.js":"16","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\GroupChatModal.js":"17","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Avatar\\UserBadgeItem.js":"18","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Avatar\\UserListItem.js":"19","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\Chatpage.js":"20","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\Homepage.js":"21","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\SideDrawer.js":"22","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\ProfileModal.js":"23","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Chatloading.js":"24","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\ChatPage.js":"25","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\HomePage.js":"26","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\ChatBox.js":"27","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\SingleChat.js":"28","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\ScrollableChats.js":"29","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\UpdateGroupChatModal.js":"30"},{"size":552,"mtime":1688471752431,"results":"31","hashOfConfig":"32"},{"size":284,"mtime":1688471752395,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1688471752441,"results":"34","hashOfConfig":"32"},{"size":1098,"mtime":1688478986428,"results":"35","hashOfConfig":"32"},{"size":310,"mtime":1688479196577,"results":"36","hashOfConfig":"32"},{"size":1910,"mtime":1688471752429,"results":"37","hashOfConfig":"32"},{"size":2241,"mtime":1688471752440,"results":"38","hashOfConfig":"32"},{"size":4251,"mtime":1688477786648,"results":"39","hashOfConfig":"32"},{"size":5378,"mtime":1688471752402,"results":"40","hashOfConfig":"32"},{"size":5076,"mtime":1688471752402,"results":"41","hashOfConfig":"32"},{"size":96,"mtime":1688471752426,"results":"42","hashOfConfig":"32"},{"size":1405,"mtime":1688471752416,"results":"43","hashOfConfig":"32"},{"size":4855,"mtime":1688471752407,"results":"44","hashOfConfig":"32"},{"size":543,"mtime":1688471752415,"results":"45","hashOfConfig":"32"},{"size":2156,"mtime":1688471752430,"results":"46","hashOfConfig":"32"},{"size":1294,"mtime":1688471752400,"results":"47","hashOfConfig":"32"},{"size":4701,"mtime":1688475514930,"results":"48","hashOfConfig":"32"},{"size":511,"mtime":1688471752405,"results":"49","hashOfConfig":"32"},{"size":702,"mtime":1688471752406,"results":"50","hashOfConfig":"32"},{"size":1067,"mtime":1688477715768,"results":"51","hashOfConfig":"32"},{"size":1227,"mtime":1688473124868,"results":"52","hashOfConfig":"32"},{"size":7248,"mtime":1688479084356,"results":"53","hashOfConfig":"32"},{"size":2047,"mtime":1688478138042,"results":"54","hashOfConfig":"32"},{"size":543,"mtime":1688471752415,"results":"55","hashOfConfig":"32"},{"size":1067,"mtime":1688479120602,"results":"56","hashOfConfig":"32"},{"size":1227,"mtime":1688473124868,"results":"57","hashOfConfig":"32"},{"size":911,"mtime":1688471752406,"results":"58","hashOfConfig":"32"},{"size":9614,"mtime":1688479362757,"results":"59","hashOfConfig":"32"},{"size":1950,"mtime":1688471752413,"results":"60","hashOfConfig":"32"},{"size":6722,"mtime":1688470114044,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"16tlc0e",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":10,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":3,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\index.js",[],[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\App.js",["163","164"],[],"import React from 'react'\r\nimport {  Box } from '@mui/material'\r\nimport Routers from \"./Router\"\r\nimport io from \"socket.io-client\"\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <React.StrictMode>\r\n      \r\n       <Routers/> \r\n    \r\n\r\n      </React.StrictMode>\r\n    \r\n  )\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Router.js",[],[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\test.js",["165"],[],"import React from \"react\";\r\nimport ProfileModal from \"./Components/Modals/profile\";\r\nimport SideBar from \"./Components/miscellaneous/SideDrawer\";\r\nexport default function Test(){\r\n    \r\n\r\n        return (\r\n            <div> \r\n                <SideBar/>\r\n                \r\n            </div>\r\n          )\r\n  \r\n}","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\cloudinary.js",["166","167","168"],[],"import React, { useState } from \"react\";\r\nimport { API } from \"./backend\";\r\nfunction Cloudinary(){\r\nconst [file,setFile]=useState(\"\");\r\nconst [image,setImage]=useState(\"\");\r\n//function for previewing files before uploading\r\n//function used to enable it to show on frontend\r\nfunction handleChange(event) {\r\n    const file = event.target.files[0];\r\n  \r\n    if (file) {\r\n      const reader = new FileReader();\r\n  \r\n      // Convert the file to Base64 encoding\r\n      reader.readAsDataURL(file);\r\n  \r\n      reader.onloadend = function () {\r\n        const base64Image = reader.result;\r\n  \r\n        // Call your API endpoint and pass the base64Image in the request body\r\n        handleSubmit(base64Image);\r\n      };\r\n    }\r\n  }\r\nfunction handleSubmit(imageData) {\r\n    console.log(imageData)\r\n    // Make the API request with the imageData in the request body\r\n   fetch(`${API}/cloudinary`, {\r\n        mode:\"no-cors\",\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body:{ imageData},\r\n    })\r\n    \r\n      .then((imageData) => {\r\n        console.log(JSON.stringify({ image: imageData }));\r\n        // Handle the response from the server\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Handle any errors\r\n      });\r\n  }\r\n    return (\r\n        <>\r\n        <div>\r\n            <form onSubmit={event=>handleSubmit(event)}>\r\n                <label htmlFor=\"fileInput\">Upload Your image</label>\r\n                <input type=\"file\" id=\"fileInput\" onChange={event=>handleChange(event)} required \r\n                accept=\"image.png,image.jpeg,image.peg,image.jfif\"\r\n                />\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n        {/* //making it able to see on our online interface */}\r\n        <img src={image} alt=\"\" />\r\n        </>\r\n    )\r\n}\r\nexport default Cloudinary","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\main\\chatProvider.js",["169","170","171","172","173"],[],"import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { API } from \"../backend\";\r\nimport { getOtherUsers } from '../configuration/logic';\r\nimport { GetNotification, RemoveNotification } from '../Helper';\r\nimport { SendNotification } from '../Components/Helper';\r\n\r\nconst ChatContext=createContext(\"\");\r\n\r\nconst ChatProvider=({children})=>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [chats,setChats]=useState();\r\n    const [error,setError]=useState();\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    const [selectedChat,setSelectedChat]=useState();\r\n    const [notification,setNotification]=useState([]);\r\n\r\n\r\n    const getNotification=(userId)=>{\r\n        try{\r\n            GetNotification(user).then(data=>{\r\n                var notificationArray = [] ;\r\n                data.notifications.forEach((element)=>{\r\n                    notificationArray.push(element.message);\r\n                })\r\n                setNotification(notificationArray);\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n       };\r\n   const removeNotification=(user,chatId)=>{\r\n    // console.log(user);\r\n    try{\r\n        RemoveNotification(user,chatId).then(data=>{\r\n            var notificationArray = [];\r\n            data.notifications.forEach((element)=>{\r\n                notificationArray.push(element.message);\r\n            })\r\n            setNotification(notificationArray)\r\n        })      \r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n   };\r\n   \r\n   const sendNotification=(response)=>{\r\n     try{\r\n      SendNotification(user, response)\r\n     }\r\n     catch(err){\r\n        console.log(err);\r\n     }\r\n   }\r\n\r\n   \r\n   \r\n   return (\r\n    <ChatContext.Provider\r\n    value={{\r\n        user,setUser,\r\n        selectedChat,setSelectedChat,\r\n        chats,setChats,\r\n        error,setError,\r\n        notification,setNotification,\r\n        removeNotification,\r\n        sendNotification,\r\n    }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n   );\r\n};\r\nexport const ChatState=()=>{\r\n    return useContext(ChatContext);\r\n}\r\nexport default ChatProvider","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Mychats.js",["174","175","176","177","178","179"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Signup.js",["180","181","182","183","184","185","186"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {signup} from \"./Helper/APIcalls\"\r\n\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\n\r\n// --------------------------------------------------------\r\nexport default function Signup() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [name , setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [image,setImage]=useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        if(name===\"name\"){\r\n            setName(event.target.value);\r\n        }\r\n        else if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else if(name===\"password\"){\r\n            setPassword(event.target.value)\r\n        }\r\n        else{\r\n            setImage(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!name || !email || !password){\r\n          setShow(true);\r\n        }\r\n        else{\r\n          signup({name,email,password}).then(data => {\r\n            setSuccess(true);\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            console.log(data);\r\n        }\r\n        )\r\n        }\r\n      \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Signed Up Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#32465A' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={name}\r\n                  name=\"Name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"Name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                  onChange={handleChange(\"name\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n             \r\n              sx={[{ mt: 3, mb: 2, bgcolor:\"#32465A\" },{\r\n                '&:hover':{\r\n                    bgcolor: \"#32465A\"\r\n                }\r\n              }]}\r\n            onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"http://localhost:3000/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Login.js",["187","188","189","190","191","192"],[],"import React from 'react'\r\nimport {useState} from \"react\"\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport {login} from \"./Helper/APIcalls\"\r\nimport { authenticate } from './Helper/APIcalls';\r\n// --------------------------------------------------------\r\n// Material UI\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport { ChatState } from '../../main/chatProvider';\r\n\r\n// --------------------------------------------------------\r\nexport default function Login() {\r\n    const [show, setShow] = useState(false);\r\n    const { setUser } = ChatState();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultTheme = createTheme();    \r\n      const handleChange = name => event => {\r\n        \r\n        if(name===\"email\"){\r\n            setEmail(event.target.value);\r\n        }\r\n        else {\r\n            setPassword(event.target.value)\r\n        }\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!email || !password){\r\n          setShow(true);\r\n          \r\n        }\r\n        else{  \r\n            login({email,password}).then(data => {\r\n              \r\n              \r\n              const user =   data;\r\n              // console.log(user);\r\n\r\n              if(user.token){\r\n                localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n                setUser(data);\r\n                setSuccess(true);\r\n                navigate(\"/chats\");\r\n              }\r\n              \r\n            \r\n              \r\n  \r\n            }\r\n            )\r\n        }\r\n       \r\n      };\r\n\r\n      const handleClose = event => {\r\n        setShow(false);\r\n        setSuccess(false);\r\n      }\r\n    \r\n \r\n\r\n\r\n  return (\r\n    <div >\r\n      <Snackbar open={show} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" variant='filled' sx={{ width: '100%' }}>\r\n          Please fill all the fields!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={success} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" variant='filled' sx={{ width: '100%' }}>\r\n          Logined Successfully!!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#32465A' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           Sign In\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange(\"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n           \r\n         <Button fullWidth variant=\"filled\" sx={[{color:\"white\", bgcolor:\"#32465A\",mt:\"10px\",mr:\"5px\"},{\r\n          \"&:hover\":{\r\n            bgcolor:\"#32465F\",\r\n            color:\"white\",\r\n            \r\n          }\r\n        \r\n        }]} onClick={handleSubmit}>\r\n              Login\r\n            </Button>\r\n\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"http://localhost:3000/signup\" variant=\"body2\">\r\n                  Don't have an account? Sign up\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </Box>\r\n        </Box>\r\n    \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\backend.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Helper.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Helper.js",["193"],[],"import { API } from \"../backend\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport const CreateGroup = (data,users,name) => {\r\n    return fetch(`${API}/create/groupChat/${data.user._id}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${data.token}`\r\n        },\r\n        body:JSON.stringify({name,users})\r\n    }).then(resp=>{\r\n        return resp.json() ;\r\n    })\r\n}\r\n\r\n\r\nexport const SearchUsers = (data,search) => {\r\n    // console.log(data);\r\n    return fetch(`${API}/${data.user._id}?search=${search}`,{\r\n        method:\"GET\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${data.token}`\r\n     }   }).then(response=>{\r\n        \r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const FetchChats = (data) => {\r\n  \r\n   return (data?(fetch(`${API}/fetch/chats/${data.user._id}`,{\r\n    method:\"GET\",\r\n    headers:{\r\n        Accept: \"application/json\",\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${data.token}`\r\n } }).then((response)=>{\r\n    // console.log(response);\r\n    return response.json();\r\n })):( null)) \r\n}\r\n\r\nexport const RenameGroup = (data, chatName, chatId) =>{\r\n    return fetch(`${API}/rename/group`,{\r\n        method:\"PUT\",\r\n    headers:{\r\n        Accept: \"application/json\",\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${data.token}`\r\n } ,\r\n body:JSON.stringify(\r\n   \r\n    {chatName,chatId}\r\n )\r\n    }).then(resp=>{\r\n        return resp.json()\r\n    })\r\n}\r\n\r\nexport const Kickout = (data, chatId, userId) => {\r\n   \r\n    return fetch(`${API}/kickOut`,{\r\n        method:\"PUT\",\r\n    headers:{\r\n        Accept: \"application/json\",\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${data.token}`\r\n } ,\r\n body:JSON.stringify({ \r\n    \"userId\" : userId,\r\n    \"chatId\" : chatId\r\n })\r\n    })\r\n}\r\n\r\nexport const AddToGroup = (data,chatId,userId) => {\r\n    return fetch(`${API}/addto/group`,{\r\n        method:\"PUT\",\r\n    headers:{\r\n        Accept: \"application/json\",\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${data.token}`\r\n } ,\r\n body:JSON.stringify(\r\n   \r\n    {chatId,userId}\r\n )\r\n    })\r\n}\r\n\r\nexport const FetchMessages = (data, user) => {\r\n   \r\n    return (data?(fetch(`${API}/${data._id}/allmessage`,{\r\n        method:\"GET\",\r\n        headers:{ \r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${user.token}`\r\n     } }).then((response)=>{\r\n        return response.json();\r\n     })):( null))\r\n}\r\n\r\n\r\nexport const RemoveNotification = (chatId,data) => {\r\n    \r\n    const userId = data.user._id;\r\n    return fetch(`${API}/deletenotification`,{\r\n        method: \"PUT\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${data.token}`\r\n        },\r\n        body:JSON.stringify({userId,chatId})\r\n    }).then(response=>{\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const SendMessage = (user,ChatId,content) =>{\r\n    return fetch(`${API}/message/send/${user.user._id}`,{\r\n        method: \"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        body:JSON.stringify({ChatId,content})  \r\n    }).then(response=>{\r\n    //    console.log(response);\r\n        return response.json();\r\n    })\r\n}\r\n\r\n\r\nexport const AccessChats = (user,userId,name) => {\r\n    return fetch(`${API}/access/chat/${user.user._id}`,{\r\n        method: \"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        body:JSON.stringify({userId,name})  \r\n    }).then(response=>{\r\n        return response.json();\r\n    }) \r\n}\r\n\r\nexport const GetUser = (data,user) =>{\r\n    return fetch(`${API}/user/${data}`,{\r\n        method:\"GET\",\r\n        headers:{ \r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${user.token}`\r\n     } }).then((response)=>{\r\n        return response.json();\r\n     })\r\n}\r\n\r\n\r\nexport const SendNotification = (user,data) =>{\r\n    return fetch(`${API}/storenotification`,{\r\n        method:\"PUT\",\r\n        headers:{ \r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${user.token}`\r\n     },\r\n    body:JSON.stringify(data.userId,data.messageId, data.chatId) }).then((response)=>{\r\n        return response.json();\r\n     })\r\n}\r\n\r\n","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\chatloading.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\configuration\\logic.js",["194"],[],"import { GetUser } from \"../Components/Helper\";\r\n\r\nexport const getOtherUser=(loggedUser,users)=>{\r\n    // console.log(users);\r\n    if(!users || users.length < 1){\r\n     return ;\r\n    }\r\n //    if it is one to one chat then other user will be either first in the array or the second one\r\n    if(users[0]._id==loggedUser.user._id){\r\n        // console.log(users[1]._id);\r\n        \r\n        return GetUser(users[1]._id,loggedUser) ;\r\n    }\r\n    else {\r\n        // console.log(users[0]._id);\r\n      \r\n        return GetUser(users[0]._id,loggedUser);\r\n    }\r\n } \r\n\r\n export const getOtherUsers = (loggedUser, users) => {\r\n    var arr = [];\r\n    users.forEach((user)=> {\r\n        if(user._id  !== loggedUser._id){\r\n            arr.push(user)\r\n        }\r\n    });\r\n    return arr;\r\n }\r\n\r\n//   this function is used to determine if the current message should be displayed with a different styling or formatting compared to the next message, based on the sender's identity\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n    return (i < messages.length - 1 && messages[i + 1].sender._id !== m.sender._id);\r\n}\r\n\r\n// this function can be used to determine if the current message is the last message in the conversation, and if it is sent by a different user than the userId, indicating that it may require a different styling\r\n export const isLastMessage = (messages, i, userId) => {\r\n    return (\r\n        i === messages.length -1 &&\r\n         messages[messages.length - 1].sender._id !== userId && messages[messages.length - 1].sender._id\r\n    )\r\n }\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n    if(\r\n        i<messages.length-1 && messages[i+1].sender._id === m.sender._id && messages[i].sender._id !== userId\r\n    ){\r\n        return 1;\r\n    }\r\n\r\n    else if(\r\n        (i<messages.length-1 && messages[i+1].sender._id !== m.sender._id && messages[i].sender._id !== userId) ||( i === messages.length-1 && messages[i].sender._id !== userId )\r\n    ){\r\n        return 0;\r\n    }\r\n\r\n    else return \"auto\";\r\n}\r\n\r\n\r\nexport const isSameUser = (messages, m ,i) => {\r\n    return i > 0 && messages[i-1].sender._id === m.sender._id;\r\n} \r\n","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Auth\\Helper\\APIcalls.js",["195"],[],"import {API} from \"../../../backend\"\r\n\r\n\r\nexport const login = (user) => {\r\n    \r\n    return fetch(`${API}/login`,{\r\n        method:\"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(resp => {\r\n        return resp.json();\r\n    })\r\n    .catch(err => {return err })\r\n}\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n\r\n    }).then((resp,err)=>{\r\n        if(err){\r\n            return ;\r\n        }\r\n        else return resp.json();\r\n    }).\r\n    catch(err=>{\r\n        console.log(err);\r\n        return\r\n    })\r\n}\r\n\r\nexport const authenticate = (data, next) =>{\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.setItem(\"jwt\",JSON.stringify(data))\r\n\r\n        next();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if(typeof window == \"undefined\"){\r\n        return false\r\n    }\r\n    if(localStorage.getItem(\"jwt\")){\r\n        \r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n        \r\n    }\r\n    else{\r\n        return false    }\r\n}","C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\GroupChatModal.js",["196","197","198","199","200","201","202","203","204","205","206","207","208"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Avatar\\UserBadgeItem.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Avatar\\UserListItem.js",["209"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\Chatpage.js",["210"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\Homepage.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\SideDrawer.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\ProfileModal.js",["211","212","213","214","215","216","217"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\Chatloading.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\ChatPage.js",["218"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Pages\\HomePage.js",[],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\ChatBox.js",["219","220"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\SingleChat.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\ScrollableChats.js",["235","236","237","238","239","240","241","242"],[],"C:\\Users\\Dell\\Desktop\\Simple.CHAT-Client--1\\client\\src\\Components\\miscellaneous\\UpdateGroupChatModal.js",["243","244"],[],{"ruleId":"245","severity":1,"message":"246","line":2,"column":11,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"249","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":10},{"ruleId":"245","severity":1,"message":"250","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":20},{"ruleId":"245","severity":1,"message":"251","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":12},{"ruleId":"245","severity":1,"message":"252","line":4,"column":13,"nodeType":"247","messageId":"248","endLine":4,"endColumn":20},{"ruleId":"245","severity":1,"message":"253","line":5,"column":14,"nodeType":"247","messageId":"248","endLine":5,"endColumn":22},{"ruleId":"245","severity":1,"message":"254","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":19},{"ruleId":"245","severity":1,"message":"255","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":13},{"ruleId":"245","severity":1,"message":"256","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":23},{"ruleId":"245","severity":1,"message":"257","line":13,"column":11,"nodeType":"247","messageId":"248","endLine":13,"endColumn":19},{"ruleId":"245","severity":1,"message":"258","line":22,"column":11,"nodeType":"247","messageId":"248","endLine":22,"endColumn":26},{"ruleId":"245","severity":1,"message":"259","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":22},{"ruleId":"245","severity":1,"message":"260","line":22,"column":5,"nodeType":"247","messageId":"248","endLine":22,"endColumn":17},{"ruleId":"245","severity":1,"message":"261","line":27,"column":8,"nodeType":"247","messageId":"248","endLine":27,"endColumn":15},{"ruleId":"245","severity":1,"message":"262","line":27,"column":17,"nodeType":"247","messageId":"248","endLine":27,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":46,"column":5,"nodeType":"265","endLine":46,"endColumn":17,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":86,"column":13,"nodeType":"269","messageId":"270","endLine":86,"endColumn":18},{"ruleId":"245","severity":1,"message":"271","line":3,"column":23,"nodeType":"247","messageId":"248","endLine":3,"endColumn":31},{"ruleId":"245","severity":1,"message":"272","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":24},{"ruleId":"245","severity":1,"message":"273","line":13,"column":8,"nodeType":"247","messageId":"248","endLine":13,"endColumn":16},{"ruleId":"245","severity":1,"message":"274","line":20,"column":23,"nodeType":"247","messageId":"248","endLine":20,"endColumn":36},{"ruleId":"245","severity":1,"message":"275","line":29,"column":12,"nodeType":"247","messageId":"248","endLine":29,"endColumn":17},{"ruleId":"245","severity":1,"message":"257","line":32,"column":11,"nodeType":"247","messageId":"248","endLine":32,"endColumn":19},{"ruleId":"245","severity":1,"message":"276","line":34,"column":11,"nodeType":"247","messageId":"248","endLine":34,"endColumn":23},{"ruleId":"245","severity":1,"message":"271","line":3,"column":23,"nodeType":"247","messageId":"248","endLine":3,"endColumn":31},{"ruleId":"245","severity":1,"message":"277","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":22},{"ruleId":"245","severity":1,"message":"272","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":24},{"ruleId":"245","severity":1,"message":"273","line":13,"column":8,"nodeType":"247","messageId":"248","endLine":13,"endColumn":16},{"ruleId":"245","severity":1,"message":"274","line":20,"column":23,"nodeType":"247","messageId":"248","endLine":20,"endColumn":36},{"ruleId":"245","severity":1,"message":"276","line":33,"column":11,"nodeType":"247","messageId":"248","endLine":33,"endColumn":23},{"ruleId":"245","severity":1,"message":"278","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":9,"column":20,"nodeType":"281","messageId":"270","endLine":9,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":34,"column":7,"nodeType":"284","messageId":"285","endLine":34,"endColumn":8,"fix":"286"},{"ruleId":"245","severity":1,"message":"287","line":8,"column":3,"nodeType":"247","messageId":"248","endLine":8,"endColumn":12},{"ruleId":"245","severity":1,"message":"288","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":14},{"ruleId":"245","severity":1,"message":"289","line":11,"column":3,"nodeType":"247","messageId":"248","endLine":11,"endColumn":10},{"ruleId":"290","severity":2,"message":"291","line":45,"column":36,"nodeType":"247","messageId":"292","endLine":45,"endColumn":40},{"ruleId":"290","severity":2,"message":"293","line":54,"column":7,"nodeType":"247","messageId":"292","endLine":54,"endColumn":12},{"ruleId":"290","severity":2,"message":"293","line":67,"column":7,"nodeType":"247","messageId":"292","endLine":67,"endColumn":12},{"ruleId":"290","severity":2,"message":"291","line":80,"column":36,"nodeType":"247","messageId":"292","endLine":80,"endColumn":40},{"ruleId":"290","severity":2,"message":"294","line":93,"column":7,"nodeType":"247","messageId":"292","endLine":93,"endColumn":15},{"ruleId":"290","severity":2,"message":"295","line":93,"column":26,"nodeType":"247","messageId":"292","endLine":93,"endColumn":31},{"ruleId":"290","severity":2,"message":"293","line":96,"column":7,"nodeType":"247","messageId":"292","endLine":96,"endColumn":12},{"ruleId":"290","severity":2,"message":"293","line":104,"column":7,"nodeType":"247","messageId":"292","endLine":104,"endColumn":12},{"ruleId":"290","severity":2,"message":"293","line":116,"column":7,"nodeType":"247","messageId":"292","endLine":116,"endColumn":12},{"ruleId":"296","severity":2,"message":"297","line":174,"column":10,"nodeType":"298","messageId":"299","endLine":174,"endColumn":26},{"ruleId":"245","severity":1,"message":"300","line":2,"column":23,"nodeType":"247","messageId":"248","endLine":2,"endColumn":28},{"ruleId":"245","severity":1,"message":"257","line":13,"column":9,"nodeType":"247","messageId":"248","endLine":13,"endColumn":17},{"ruleId":"245","severity":1,"message":"287","line":7,"column":3,"nodeType":"247","messageId":"248","endLine":7,"endColumn":12},{"ruleId":"245","severity":1,"message":"301","line":8,"column":3,"nodeType":"247","messageId":"248","endLine":8,"endColumn":14},{"ruleId":"245","severity":1,"message":"288","line":9,"column":3,"nodeType":"247","messageId":"248","endLine":9,"endColumn":14},{"ruleId":"245","severity":1,"message":"302","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":15},{"ruleId":"296","severity":2,"message":"303","line":65,"column":4,"nodeType":"298","messageId":"299","endLine":65,"endColumn":7},{"ruleId":"296","severity":2,"message":"304","line":84,"column":4,"nodeType":"298","messageId":"299","endLine":84,"endColumn":8},{"ruleId":"296","severity":2,"message":"304","line":85,"column":6,"nodeType":"298","messageId":"299","endLine":85,"endColumn":10},{"ruleId":"245","severity":1,"message":"257","line":13,"column":9,"nodeType":"247","messageId":"248","endLine":13,"endColumn":17},{"ruleId":"245","severity":1,"message":"305","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":22},{"ruleId":"306","severity":1,"message":"307","line":20,"column":71,"nodeType":"308","endLine":20,"endColumn":158},{"ruleId":"245","severity":1,"message":"309","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":28},{"ruleId":"245","severity":1,"message":"255","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"310","line":8,"column":34,"nodeType":"247","messageId":"248","endLine":8,"endColumn":38},{"ruleId":"245","severity":1,"message":"311","line":8,"column":51,"nodeType":"247","messageId":"248","endLine":8,"endColumn":57},{"ruleId":"245","severity":1,"message":"300","line":8,"column":65,"nodeType":"247","messageId":"248","endLine":8,"endColumn":70},{"ruleId":"245","severity":1,"message":"259","line":9,"column":10,"nodeType":"247","messageId":"248","endLine":9,"endColumn":22},{"ruleId":"245","severity":1,"message":"312","line":15,"column":10,"nodeType":"247","messageId":"248","endLine":15,"endColumn":18},{"ruleId":"245","severity":1,"message":"313","line":16,"column":10,"nodeType":"247","messageId":"248","endLine":16,"endColumn":17},{"ruleId":"245","severity":1,"message":"314","line":17,"column":10,"nodeType":"247","messageId":"248","endLine":17,"endColumn":16},{"ruleId":"245","severity":1,"message":"315","line":40,"column":9,"nodeType":"247","messageId":"248","endLine":40,"endColumn":27},{"ruleId":"263","severity":1,"message":"316","line":54,"column":7,"nodeType":"265","endLine":54,"endColumn":9,"suggestions":"317"},{"ruleId":"263","severity":1,"message":"318","line":130,"column":7,"nodeType":"265","endLine":130,"endColumn":21,"suggestions":"319"},{"ruleId":"263","severity":1,"message":"320","line":151,"column":7,"nodeType":"265","endLine":151,"endColumn":9,"suggestions":"321"},{"ruleId":"296","severity":2,"message":"322","line":209,"column":22,"nodeType":"298","messageId":"299","endLine":209,"endColumn":37},{"ruleId":"245","severity":1,"message":"323","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":1,"column":18,"nodeType":"247","messageId":"248","endLine":1,"endColumn":21},{"ruleId":"245","severity":1,"message":"300","line":1,"column":30,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"245","severity":1,"message":"324","line":1,"column":37,"nodeType":"247","messageId":"248","endLine":1,"endColumn":44},{"ruleId":"245","severity":1,"message":"325","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":22},{"ruleId":"245","severity":1,"message":"326","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":23},{"ruleId":"245","severity":1,"message":"305","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":22},{"ruleId":"245","severity":1,"message":"327","line":9,"column":9,"nodeType":"247","messageId":"248","endLine":9,"endColumn":18},{"ruleId":"245","severity":1,"message":"328","line":13,"column":3,"nodeType":"247","messageId":"248","endLine":13,"endColumn":13},{"ruleId":"245","severity":1,"message":"329","line":49,"column":10,"nodeType":"247","messageId":"248","endLine":49,"endColumn":23},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'ProfileModal' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'setImage' is assigned a value but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","'getOtherUsers' is defined but never used.","'navigate' is assigned a value but never used.","'getNotification' is assigned a value but never used.","'getOtherUser' is defined but never used.","'notification' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["330"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'Navigate' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'ThemeProvider' is defined but never used.","'image' is assigned a value but never used.","'defaultTheme' is assigned a value but never used.","'authenticate' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"331","text":"332"},"'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Spinner' is defined but never used.","no-undef","'user' is not defined.","undef","'toast' is not defined.","'setChats' is not defined.","'chats' is not defined.","react/jsx-no-undef","'CircularProgress' is not defined.","JSXIdentifier","undefined","'Stack' is defined but never used.","'ModalHeader' is defined but never used.","'ModalOverlay' is defined but never used.","'Box' is not defined.","'Grid' is not defined.","'ScrollableFeed' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UpdateGroupChatModal' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'TrySharp' is defined but never used.","'GetUser' is defined but never used.","'useRef' is defined but never used.","'removeNotification' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'fetchAgain', 'fetchMessages', and 'setFetchAgain'. Either include them or remove the dependency array. If 'setFetchAgain' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"React Hook useEffect has missing dependencies: 'fetchAgain', 'fetchMessages', 'messages', 'notification', 'removeNotifications', 'setFetchAgain', 'setNotification', and 'user'. Either include them or remove the dependency array. If 'setFetchAgain' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["335"],"'UpdateGroupChat' is not defined.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'isSameSender' is defined but never used.","'isLastMessage' is defined but never used.","'Scrollbar' is defined but never used.","'Typography' is defined but never used.","'renameLoading' is assigned a value but never used.",{"desc":"336","fix":"337"},[773,780],"\r\n    .",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"344","text":"345"},"Update the dependencies array to be: [user]",{"range":"346","text":"347"},"Update the dependencies array to be: [fetchAgain, fetchMessages, selectedChat, setFetchAgain]",{"range":"348","text":"349"},"Update the dependencies array to be: [fetchAgain, fetchMessages, messages, notification, removeNotifications, setFetchAgain, setNotification, user]",{"range":"350","text":"351"},[1199,1211],"[fetchAgain, fetchChats]",[1897,1899],"[user]",[4686,4700],"[fetchAgain, fetchMessages, selectedChat, setFetchAgain]",[5495,5497],"[fetchAgain, fetchMessages, messages, notification, removeNotifications, setFetchAgain, setNotification, user]"]